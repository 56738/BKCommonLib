com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, net.minecraft.server.EnumDifficulty -> org.bukkit.Difficulty]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, net.minecraft.server.EnumItemSlot -> org.bukkit.inventory.EquipmentSlot]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.PacketPlayOutScoreboardTeamHandle -> net.minecraft.server.v1_12_R1.PacketPlayOutScoreboardTeam]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, net.minecraft.server.Entity -> org.bukkit.entity.Player]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, com.bergerkiller.bukkit.common.nbt.CommonTagCompound -> net.minecraft.server.NBTTagCompound]

com.bergerkiller.mountiplex.conversion.type.NullConverter[cost=0, (Object) MinecraftKey -> Object]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.EntityLiving -> com.bergerkiller.generated.net.minecraft.server.EntityLivingHandle]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.PacketPlayInSettings -> com.bergerkiller.generated.net.minecraft.server.PacketPlayInSettingsHandle]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.DataWatcherRegistry -> com.bergerkiller.generated.net.minecraft.server.DataWatcherRegistryHandle]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, Map<EnumProtocolDirectionHandle, BiMap> -> (Map<EnumProtocolDirectionHandle, BiMap>) Map<EnumProtocolDirection, BiMap<Integer, Class<? extends Packet<?>>>>]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.org.bukkit.craftbukkit.CraftSoundHandle -> org.bukkit.craftbukkit.v1_12_R1.CraftSound]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.TileEntityHopper -> com.bergerkiller.generated.net.minecraft.server.TileEntityHopperHandle]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.ExplosionHandle -> net.minecraft.server.v1_12_R1.Explosion]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.MobSpawnerAbstractHandle -> net.minecraft.server.v1_12_R1.MobSpawnerAbstract]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.PacketPlayOutMountHandle -> net.minecraft.server.v1_12_R1.PacketPlayOutMount]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.FoodMetaDataHandle -> net.minecraft.server.v1_12_R1.FoodMetaData]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.IChatBaseComponentHandle.ChatSerializerHandle -> net.minecraft.server.v1_12_R1.IChatBaseComponent.ChatSerializer]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.WeightedRandomHandle -> net.minecraft.server.v1_12_R1.WeightedRandom]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.TileEntityFurnace -> com.bergerkiller.generated.net.minecraft.server.TileEntityFurnaceHandle]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.PacketPlayOutEntityTeleportHandle -> net.minecraft.server.v1_12_R1.PacketPlayOutEntityTeleport]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.Container -> com.bergerkiller.generated.net.minecraft.server.ContainerHandle]

com.bergerkiller.mountiplex.conversion.type.NullConverter[cost=0, (Object) IChunkProvider -> Object]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.ShapedRecipesHandle -> net.minecraft.server.v1_12_R1.ShapedRecipes]

com.bergerkiller.mountiplex.conversion.type.CastingConverter[cost=1, org.bukkit.Chunk -> (org.bukkit.Chunk) org.bukkit.craftbukkit.CraftChunk]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.PacketPlayInUseItemHandle -> net.minecraft.server.v1_12_R1.PacketPlayInUseItem]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, com.bergerkiller.bukkit.common.bases.IntVector2 -> net.minecraft.server.ChunkCoordIntPair]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.WorldTypeHandle -> net.minecraft.server.v1_12_R1.WorldType]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, com.bergerkiller.bukkit.common.wrappers.IntHashMap<?> -> (com.bergerkiller.bukkit.common.wrappers.IntHashMap<Object>) IntHashMap<EntityTrackerEntry>]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.NBTBase -> com.bergerkiller.generated.net.minecraft.server.NBTBaseHandle]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.PacketPlayOutSpawnEntityLiving -> com.bergerkiller.generated.net.minecraft.server.PacketPlayOutSpawnEntityLivingHandle]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.DataWatcher.Item -> com.bergerkiller.generated.net.minecraft.server.DataWatcherHandle.ItemHandle]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, com.bergerkiller.bukkit.common.wrappers.BlockData -> net.minecraft.server.v1_12_R1.Block]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.PacketPlayInVehicleMoveHandle -> net.minecraft.server.v1_12_R1.PacketPlayInVehicleMove]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, org.bukkit.craftbukkit.v1_12_R1.CraftChunk -> com.bergerkiller.generated.org.bukkit.craftbukkit.CraftChunkHandle]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.MinecraftKeyHandle -> net.minecraft.server.v1_12_R1.MinecraftKey]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.RegionFileCache -> com.bergerkiller.generated.net.minecraft.server.RegionFileCacheHandle]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.ItemStack -> com.bergerkiller.generated.net.minecraft.server.ItemStackHandle]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.WorldProviderHandle -> net.minecraft.server.v1_12_R1.WorldProvider]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, net.minecraft.server.IBlockData -> com.bergerkiller.bukkit.common.wrappers.BlockData]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, org.bukkit.craftbukkit.v1_12_R1.entity.CraftEntity -> com.bergerkiller.generated.org.bukkit.craftbukkit.entity.CraftEntityHandle]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.PacketPlayOutCustomSoundEffectHandle -> net.minecraft.server.v1_12_R1.PacketPlayOutCustomSoundEffect]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.CraftingManagerHandle -> net.minecraft.server.v1_12_R1.CraftingManager]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.WeightedRandom -> com.bergerkiller.generated.net.minecraft.server.WeightedRandomHandle]

com.bergerkiller.mountiplex.conversion.type.NullConverter[cost=0, (org.bukkit.inventory.Inventory) CraftInventory -> org.bukkit.inventory.Inventory]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.PacketPlayInBlockPlace -> com.bergerkiller.generated.net.minecraft.server.PacketPlayInBlockPlaceHandle]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.PacketPlayInWindowClickHandle -> net.minecraft.server.v1_12_R1.PacketPlayInWindowClick]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, Map<Object, Object> -> (Map<Object, Object>) ImmutableMap<IBlockState<?>, Comparable<?>>]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, net.minecraft.server.WorldType -> org.bukkit.WorldType]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.PacketPlayOutVehicleMove -> com.bergerkiller.generated.net.minecraft.server.PacketPlayOutVehicleMoveHandle]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.PacketPlayOutSetCooldownHandle -> net.minecraft.server.v1_12_R1.PacketPlayOutSetCooldown]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.IPlayerFileData -> com.bergerkiller.generated.net.minecraft.server.IPlayerFileDataHandle]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.EnumProtocolDirectionHandle -> net.minecraft.server.v1_12_R1.EnumProtocolDirection]

com.bergerkiller.mountiplex.conversion.type.CastingConverter[cost=1, Iterable -> (Iterable) RegistryBlockID<IBlockData>]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.BlockCobbleWall -> com.bergerkiller.generated.net.minecraft.server.BlockCobbleWallHandle]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.BlocksHandle -> net.minecraft.server.v1_12_R1.Blocks]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, List<com.bergerkiller.bukkit.common.wrappers.DataWatcher.Item<?>> -> (List<com.bergerkiller.bukkit.common.wrappers.DataWatcher.Item<?>>) List<DataWatcher.Item<?>>]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.PacketPlayOutNamedEntitySpawnHandle -> net.minecraft.server.v1_12_R1.PacketPlayOutNamedEntitySpawn]

com.bergerkiller.mountiplex.conversion.builtin.CollectionConversion$CollectionConverter$ElementConverter[cost=1, (List<TileEntityHandle>) List<TileEntity> -> List<TileEntityHandle>]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.IBlockDataHandle -> net.minecraft.server.v1_12_R1.IBlockData]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.EntityItemHandle -> net.minecraft.server.v1_12_R1.EntityItem]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, List<org.bukkit.entity.Entity> -> List<net.minecraft.server.v1_12_R1.Entity>]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, net.minecraft.server.Chunk -> org.bukkit.Chunk]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.PacketPlayOutWindowItemsHandle -> net.minecraft.server.v1_12_R1.PacketPlayOutWindowItems]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.PacketPlayOutEntityHandle.PacketPlayOutRelEntityMoveLookHandle -> net.minecraft.server.v1_12_R1.PacketPlayOutEntity.PacketPlayOutRelEntityMoveLook]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, com.bergerkiller.bukkit.common.wrappers.DataWatcher.Key<?> -> (DataWatcher.Key<Float>) DataWatcherObject<Float>]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, net.minecraft.server.ChunkSection -> com.bergerkiller.bukkit.common.wrappers.ChunkSection]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, org.bukkit.World -> net.minecraft.server.WorldServer]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, List<BiomeMetaHandle> -> (List<BiomeMetaHandle>) List<BiomeBase.BiomeMeta>]

com.bergerkiller.mountiplex.conversion.type.NullConverter[cost=0, (Object) FoodMetaData -> Object]

com.bergerkiller.mountiplex.conversion.type.NullConverter[cost=0, (Object) PlayerInventory -> Object]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.PacketPlayOutChat -> com.bergerkiller.generated.net.minecraft.server.PacketPlayOutChatHandle]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, org.bukkit.Difficulty -> net.minecraft.server.EnumDifficulty]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, org.bukkit.craftbukkit.v1_12_R1.inventory.CraftInventoryBrewer -> com.bergerkiller.generated.org.bukkit.craftbukkit.inventory.CraftInventoryBrewerHandle]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.Chunk -> com.bergerkiller.generated.net.minecraft.server.ChunkHandle]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.PacketPlayOutNamedEntitySpawn -> com.bergerkiller.generated.net.minecraft.server.PacketPlayOutNamedEntitySpawnHandle]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.PacketPlayInUpdateSign -> com.bergerkiller.generated.net.minecraft.server.PacketPlayInUpdateSignHandle]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.EntityMinecartFurnaceHandle -> net.minecraft.server.v1_12_R1.EntityMinecartFurnace]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.EnumDirectionHandle -> net.minecraft.server.v1_12_R1.EnumDirection]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.org.bukkit.inventory.MainHandHandle -> org.bukkit.inventory.MainHand]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, net.minecraft.server.Packet -> com.bergerkiller.bukkit.common.protocol.CommonPacket]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.ShapelessRecipes -> com.bergerkiller.generated.net.minecraft.server.ShapelessRecipesHandle]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.PacketPlayOutCollect -> com.bergerkiller.generated.net.minecraft.server.PacketPlayOutCollectHandle]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.PacketPlayInBoatMoveHandle -> net.minecraft.server.v1_12_R1.PacketPlayInBoatMove]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, org.bukkit.craftbukkit.v1_12_R1.inventory.CraftInventoryCrafting -> com.bergerkiller.generated.org.bukkit.craftbukkit.inventory.CraftInventoryCraftingHandle]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.IChatBaseComponent.ChatSerializer -> com.bergerkiller.generated.net.minecraft.server.IChatBaseComponentHandle.ChatSerializerHandle]

com.bergerkiller.mountiplex.conversion.builtin.CollectionConversion$CollectionConverter$ElementConverter[cost=1, (List<CommonTagCompound>) List<NBTTagCompound> -> List<CommonTagCompound>]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, net.minecraft.server.ChatMessageType -> com.bergerkiller.bukkit.common.wrappers.ChatMessageType]

com.bergerkiller.mountiplex.conversion.type.NullConverter[cost=0, (Object[]) net.md_5.bungee.api.chat.BaseComponent[] -> Object[]]

com.bergerkiller.mountiplex.conversion.builtin.ArrayConversion$1$5$1[cost=1, List<Object>[] -> (List<Object>[]) List<Entity>[]]

com.bergerkiller.mountiplex.conversion.type.CastingConverter[cost=1, Class<?> -> (Class<?>) Class<? extends Entity>]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.EntityHanging -> com.bergerkiller.generated.net.minecraft.server.EntityHangingHandle]

com.bergerkiller.mountiplex.conversion.type.ChainConverter[cost=2, org.bukkit.entity.Entity -> (org.bukkit.entity.Entity) CraftEntity] {
  -> com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, org.bukkit.entity.Entity -> net.minecraft.server.Entity]
  -> com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, net.minecraft.server.Entity -> (org.bukkit.entity.Entity) CraftEntity]
}

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, Map<MobEffectListHandle, MobEffectHandle> -> (Map<MobEffectListHandle, MobEffectHandle>) Map<MobEffectList, MobEffect>]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.EntitySliceHandle -> net.minecraft.server.v1_12_R1.EntitySlice]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.RecipeItemStack -> com.bergerkiller.generated.net.minecraft.server.RecipeItemStackHandle]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.EnumDirection.EnumAxis -> com.bergerkiller.generated.net.minecraft.server.EnumDirectionHandle.EnumAxisHandle]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, org.bukkit.craftbukkit.v1_12_R1.block.CraftBlockState -> com.bergerkiller.generated.org.bukkit.craftbukkit.block.CraftBlockStateHandle]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.IChatBaseComponentHandle -> net.minecraft.server.v1_12_R1.IChatBaseComponent]

com.bergerkiller.mountiplex.conversion.type.NullConverter[cost=0, (Object) DataWatcherSerializer<T> -> Object]

com.bergerkiller.mountiplex.conversion.type.NullConverter[cost=0, (Object) ChatMessageType -> Object]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.PacketPlayOutScoreboardScoreHandle.EnumScoreboardActionHandle -> net.minecraft.server.v1_12_R1.PacketPlayOutScoreboardScore.EnumScoreboardAction]

com.bergerkiller.mountiplex.conversion.type.NullConverter[cost=0, (Object) net.minecraft.server.ItemStack -> Object]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.PacketPlayOutChatHandle -> net.minecraft.server.v1_12_R1.PacketPlayOutChat]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.PacketPlayOutEntity.PacketPlayOutEntityLook -> com.bergerkiller.generated.net.minecraft.server.PacketPlayOutEntityHandle.PacketPlayOutEntityLookHandle]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.EntityTracker -> com.bergerkiller.generated.net.minecraft.server.EntityTrackerHandle]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.EnumGamemodeHandle -> net.minecraft.server.v1_12_R1.EnumGamemode]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.CrashReport -> com.bergerkiller.generated.net.minecraft.server.CrashReportHandle]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.PacketPlayOutNamedSoundEffect -> com.bergerkiller.generated.net.minecraft.server.PacketPlayOutNamedSoundEffectHandle]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.PlayerChunk -> com.bergerkiller.generated.net.minecraft.server.PlayerChunkHandle]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.MinecraftServerHandle -> net.minecraft.server.v1_12_R1.MinecraftServer]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.IDataManagerHandle -> net.minecraft.server.v1_12_R1.IDataManager]

com.bergerkiller.mountiplex.conversion.type.NullConverter[cost=0, (org.bukkit.inventory.MerchantInventory) CraftInventoryMerchant -> org.bukkit.inventory.MerchantInventory]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, String -> com.bergerkiller.bukkit.common.wrappers.ResourceKey]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.PlayerAbilities -> com.bergerkiller.generated.net.minecraft.server.PlayerAbilitiesHandle]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.org.bukkit.entity.EntityHandle -> org.bukkit.entity.Entity]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.org.bukkit.craftbukkit.inventory.CraftInventoryMerchantHandle -> org.bukkit.craftbukkit.v1_12_R1.inventory.CraftInventoryMerchant]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, com.bergerkiller.bukkit.common.wrappers.DataWatcher.Item<?> -> net.minecraft.server.DataWatcher.Item<?>]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, org.bukkit.inventory.ItemStack -> net.minecraft.server.ItemStack]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, List<CommonTagCompound> -> (List<CommonTagCompound>) List<NBTTagCompound>]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.AttributeInstanceHandle -> net.minecraft.server.v1_12_R1.AttributeInstance]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, org.bukkit.entity.Entity -> (org.bukkit.entity.Fireball) EntityFireball]

com.bergerkiller.mountiplex.conversion.builtin.CollectionConversion$CollectionConverter$ElementConverter[cost=1, (Collection<Object>) Collection<AttributeInstance> -> Collection<Object>]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, org.bukkit.inventory.MainHand -> net.minecraft.server.EnumHand]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.RegistryIDHandle -> net.minecraft.server.v1_12_R1.RegistryID]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.PacketPlayOutScoreboardTeam -> com.bergerkiller.generated.net.minecraft.server.PacketPlayOutScoreboardTeamHandle]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.IWorldAccessHandle -> net.minecraft.server.v1_12_R1.IWorldAccess]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.PacketPlayInBlockPlaceHandle -> net.minecraft.server.v1_12_R1.PacketPlayInBlockPlace]

com.bergerkiller.mountiplex.conversion.builtin.CollectionConversion$CollectionConverter$ElementConverter[cost=1, (List<WorldServerHandle>) List<WorldServer> -> List<WorldServerHandle>]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.BlockFence -> com.bergerkiller.generated.net.minecraft.server.BlockFenceHandle]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.EntityTrackerHandle -> net.minecraft.server.v1_12_R1.EntityTracker]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.org.bukkit.inventory.InventoryHandle -> org.bukkit.inventory.Inventory]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.EnumSkyBlock -> com.bergerkiller.generated.net.minecraft.server.EnumSkyBlockHandle]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.MobEffectList -> com.bergerkiller.generated.net.minecraft.server.MobEffectListHandle]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, org.bukkit.inventory.EquipmentSlot -> net.minecraft.server.EnumItemSlot]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.InventoryEnderChestHandle -> net.minecraft.server.v1_12_R1.InventoryEnderChest]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.SoundEffectTypeHandle -> net.minecraft.server.v1_12_R1.SoundEffectType]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.RegistryMaterialsHandle -> net.minecraft.server.v1_12_R1.RegistryMaterials]

com.bergerkiller.mountiplex.conversion.type.NullConverter[cost=0, (java.lang.Class<?>) java.lang.Class<? extends EntityInsentient> -> java.lang.Class<?>]

com.bergerkiller.mountiplex.conversion.type.NullConverter[cost=0, (Object) EnumDirection -> Object]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.EnumItemSlot -> com.bergerkiller.generated.net.minecraft.server.EnumItemSlotHandle]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.ReportedException -> com.bergerkiller.generated.net.minecraft.server.ReportedExceptionHandle]

com.bergerkiller.mountiplex.conversion.Conversion$OutputConverterTree$1[cost=1, Object -> (Object) IBlockAccess]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.PacketPlayOutPosition -> com.bergerkiller.generated.net.minecraft.server.PacketPlayOutPositionHandle]

com.bergerkiller.mountiplex.conversion.builtin.ArrayConversion$1$5$1[cost=1, Object[] -> (Object[]) net.md_5.bungee.api.chat.BaseComponent[]]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.EnumItemSlotHandle -> net.minecraft.server.v1_12_R1.EnumItemSlot]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, net.minecraft.server.BlockPosition -> com.bergerkiller.bukkit.common.bases.IntVector3]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.AttributeMapServerHandle -> net.minecraft.server.v1_12_R1.AttributeMapServer]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.EntityMinecartAbstract -> com.bergerkiller.generated.net.minecraft.server.EntityMinecartAbstractHandle]

com.bergerkiller.mountiplex.conversion.builtin.ArrayConversion$1$4$1[cost=1, List<org.bukkit.inventory.ItemStack> -> net.minecraft.server.v1_12_R1.ItemStack[]]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.RegistryID -> com.bergerkiller.generated.net.minecraft.server.RegistryIDHandle]

com.bergerkiller.mountiplex.conversion.builtin.ArrayConversion$1$5$1[cost=1, org.bukkit.map.MapCursor[] -> net.minecraft.server.v1_12_R1.MapIcon[]]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, Set<org.bukkit.entity.Player> -> Set<net.minecraft.server.v1_12_R1.EntityPlayer>]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.EnumProtocol -> com.bergerkiller.generated.net.minecraft.server.EnumProtocolHandle]

com.bergerkiller.mountiplex.conversion.Conversion$OutputConverterTree$1[cost=1, Object -> (Object) PacketPlayInResourcePackStatus.EnumResourcePackStatus]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.EnumMainHandHandle -> net.minecraft.server.v1_12_R1.EnumMainHand]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, org.bukkit.entity.Entity -> net.minecraft.server.Entity]

com.bergerkiller.mountiplex.conversion.type.NullConverter[cost=0, (List<?>) List<T extends Entity> -> List<?>]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.SoundEffect -> com.bergerkiller.generated.net.minecraft.server.SoundEffectHandle]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, com.bergerkiller.bukkit.common.wrappers.InventoryClickType -> net.minecraft.server.InventoryClickType]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.PacketPlayOutSpawnEntityPainting -> com.bergerkiller.generated.net.minecraft.server.PacketPlayOutSpawnEntityPaintingHandle]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, com.bergerkiller.bukkit.common.wrappers.DataWatcher.Item -> net.minecraft.server.DataWatcher.Item]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.PacketPlayOutMapChunkHandle -> net.minecraft.server.v1_12_R1.PacketPlayOutMapChunk]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, org.bukkit.craftbukkit.v1_12_R1.inventory.CraftInventoryBeacon -> com.bergerkiller.generated.org.bukkit.craftbukkit.inventory.CraftInventoryBeaconHandle]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.EnumProtocolDirection -> com.bergerkiller.generated.net.minecraft.server.EnumProtocolDirectionHandle]

com.bergerkiller.mountiplex.conversion.Conversion$OutputConverterTree$1[cost=1, Object -> (Object) IChunkLoader]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.WorldServer -> com.bergerkiller.generated.net.minecraft.server.WorldServerHandle]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, org.bukkit.craftbukkit.v1_12_R1.util.LongObjectHashMap -> com.bergerkiller.generated.org.bukkit.craftbukkit.util.LongObjectHashMapHandle]

com.bergerkiller.mountiplex.conversion.builtin.MapConversion$MapConverter$ElementConverter[cost=1, (Map<java.io.File, RegionFileHandle>) Map<java.io.File, RegionFile> -> Map<java.io.File, RegionFileHandle>]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.org.bukkit.inventory.PlayerInventoryHandle -> org.bukkit.inventory.PlayerInventory]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.SoundCategoryHandle -> net.minecraft.server.v1_12_R1.SoundCategory]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.World -> com.bergerkiller.generated.net.minecraft.server.WorldHandle]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.EnumDifficultyHandle -> net.minecraft.server.v1_12_R1.EnumDifficulty]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.IBlockData -> com.bergerkiller.generated.net.minecraft.server.IBlockDataHandle]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.MobEffectHandle -> net.minecraft.server.v1_12_R1.MobEffect]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.PacketPlayOutSpawnEntityExperienceOrb -> com.bergerkiller.generated.net.minecraft.server.PacketPlayOutSpawnEntityExperienceOrbHandle]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, com.bergerkiller.bukkit.common.wrappers.ResourceKey -> net.minecraft.server.SoundEffect]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.EntityMinecartCommandBlock -> com.bergerkiller.generated.net.minecraft.server.EntityMinecartCommandBlockHandle]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.PlayerConnectionHandle -> net.minecraft.server.v1_12_R1.PlayerConnection]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.EnumGamemode -> com.bergerkiller.generated.net.minecraft.server.EnumGamemodeHandle]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.MinecraftServer -> com.bergerkiller.generated.net.minecraft.server.MinecraftServerHandle]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, net.minecraft.server.Item -> org.bukkit.Material]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.PacketPlayOutNamedSoundEffectHandle -> net.minecraft.server.v1_12_R1.PacketPlayOutNamedSoundEffect]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.org.bukkit.craftbukkit.potion.CraftPotionUtilHandle -> org.bukkit.craftbukkit.v1_12_R1.potion.CraftPotionUtil]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.SoundCategory -> com.bergerkiller.generated.net.minecraft.server.SoundCategoryHandle]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.NonNullList -> com.bergerkiller.generated.net.minecraft.server.NonNullListHandle]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.PlayerList -> com.bergerkiller.generated.net.minecraft.server.PlayerListHandle]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.PacketPlayOutSpawnEntityPaintingHandle -> net.minecraft.server.v1_12_R1.PacketPlayOutSpawnEntityPainting]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.MapIcon -> com.bergerkiller.generated.net.minecraft.server.MapIconHandle]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.ItemStackHandle -> net.minecraft.server.v1_12_R1.ItemStack]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, net.minecraft.server.DataWatcherObject<?> -> DataWatcher.Key<String>]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.PortalTravelAgent -> com.bergerkiller.generated.net.minecraft.server.PortalTravelAgentHandle]

com.bergerkiller.mountiplex.conversion.builtin.ArrayConversion$1$5$1[cost=1, net.minecraft.server.v1_12_R1.IChatBaseComponent[] -> com.bergerkiller.bukkit.common.wrappers.ChatText[]]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.WorldServerHandle -> net.minecraft.server.v1_12_R1.WorldServer]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.org.bukkit.plugin.SimplePluginManagerHandle -> org.bukkit.plugin.SimplePluginManager]

com.bergerkiller.mountiplex.conversion.type.NullConverter[cost=0, (Object) PacketPlayOutBoss.Action -> Object]

com.bergerkiller.mountiplex.conversion.type.NullConverter[cost=0, (Object) net.minecraft.server.Block -> Object]

com.bergerkiller.mountiplex.conversion.type.NullConverter[cost=0, (Object) EnumHand -> Object]

com.bergerkiller.mountiplex.conversion.type.NullConverter[cost=0, (org.bukkit.inventory.BeaconInventory) CraftInventoryBeacon -> org.bukkit.inventory.BeaconInventory]

com.bergerkiller.mountiplex.conversion.Conversion$OutputConverterTree$1[cost=1, Object -> (Object) IHopper]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.BlockFenceHandle -> net.minecraft.server.v1_12_R1.BlockFence]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, org.bukkit.plugin.SimplePluginManager -> com.bergerkiller.generated.org.bukkit.plugin.SimplePluginManagerHandle]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.org.bukkit.entity.HumanEntityHandle -> org.bukkit.entity.HumanEntity]

com.bergerkiller.mountiplex.conversion.Conversion$OutputConverterTree$1[cost=1, Object -> (Object) BossBattle.BarColor]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, List<org.bukkit.inventory.ItemStack> -> List<net.minecraft.server.v1_12_R1.ItemStack>]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, Map<IntVector3, org.bukkit.block.BlockState> -> (Map<IntVector3, org.bukkit.block.BlockState>) Map<BlockPosition, TileEntity>]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, (List<AxisAlignedBBHandle>) List<AxisAlignedBB> -> List<AxisAlignedBBHandle>]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, List<Object> -> List<Entity>]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.PlayerInventoryHandle -> net.minecraft.server.v1_12_R1.PlayerInventory]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, org.bukkit.craftbukkit.v1_12_R1.block.CraftBlock -> com.bergerkiller.generated.org.bukkit.craftbukkit.block.CraftBlockHandle]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.SoundEffectHandle -> net.minecraft.server.v1_12_R1.SoundEffect]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, org.bukkit.entity.HumanEntity -> com.bergerkiller.generated.org.bukkit.entity.HumanEntityHandle]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, net.minecraft.server.InventoryClickType -> com.bergerkiller.bukkit.common.wrappers.InventoryClickType]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, org.bukkit.plugin.RegisteredListener -> com.bergerkiller.generated.org.bukkit.plugin.RegisteredListenerHandle]

com.bergerkiller.mountiplex.conversion.builtin.VoidTypeConverter$1[cost=1, Object -> void]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.TileEntityHandle -> net.minecraft.server.v1_12_R1.TileEntity]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, org.bukkit.GameMode -> net.minecraft.server.EnumGamemode]

com.bergerkiller.mountiplex.conversion.builtin.CollectionConversion$CollectionConverter$ElementConverter[cost=1, List<Entity> -> List<Object>]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, net.minecraft.server.DataWatcherObject<?> -> DataWatcher.Key<Boolean>]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.PacketPlayInSettingsHandle -> net.minecraft.server.v1_12_R1.PacketPlayInSettings]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.PacketPlayOutEntity.PacketPlayOutRelEntityMove -> com.bergerkiller.generated.net.minecraft.server.PacketPlayOutEntityHandle.PacketPlayOutRelEntityMoveHandle]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.DataWatcherObjectHandle -> net.minecraft.server.v1_12_R1.DataWatcherObject]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, net.minecraft.server.EnumDirection -> org.bukkit.block.BlockFace]

com.bergerkiller.mountiplex.conversion.type.CastingConverter[cost=1, (java.util.Iterator<Long>) java.util.Iterator -> java.util.Iterator<Long>]

com.bergerkiller.mountiplex.conversion.type.NullConverter[cost=0, (org.bukkit.inventory.PlayerInventory) CraftInventoryPlayer -> org.bukkit.inventory.PlayerInventory]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.MobSpawnerDataHandle -> net.minecraft.server.v1_12_R1.MobSpawnerData]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, List<EntityHumanHandle> -> (List<EntityHumanHandle>) List<EntityHuman>]

com.bergerkiller.mountiplex.conversion.Conversion$OutputConverterTree$1[cost=1, Object -> (BlockFace) EnumDirection]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, org.bukkit.craftbukkit.v1_12_R1.CraftTravelAgent -> com.bergerkiller.generated.org.bukkit.craftbukkit.CraftTravelAgentHandle]

com.bergerkiller.mountiplex.conversion.Conversion$OutputConverterTree$1[cost=1, Object -> net.minecraft.server.v1_12_R1.Block]

com.bergerkiller.mountiplex.conversion.builtin.CollectionConversion$CollectionConverter$ElementConverter[cost=1, (Set<EntityTrackerEntryHandle>) Set<EntityTrackerEntry> -> Set<EntityTrackerEntryHandle>]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.MobSpawnerData -> com.bergerkiller.generated.net.minecraft.server.MobSpawnerDataHandle]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.PlayerInventory -> com.bergerkiller.generated.net.minecraft.server.PlayerInventoryHandle]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, net.minecraft.server.IChatBaseComponent -> com.bergerkiller.bukkit.common.wrappers.ChatText]

com.bergerkiller.mountiplex.conversion.builtin.CollectionConversion$CollectionConverter$ElementConverter[cost=1, (List<org.bukkit.inventory.ItemStack>) NonNullList<ItemStack> -> List<org.bukkit.inventory.ItemStack>]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.EntityTypes -> com.bergerkiller.generated.net.minecraft.server.EntityTypesHandle]

com.bergerkiller.mountiplex.conversion.builtin.MapConversion$MapConverter$ElementConverter[cost=1, (Map<java.util.UUID, EntityHandle>) Map<java.util.UUID, Entity> -> Map<java.util.UUID, EntityHandle>]

com.bergerkiller.mountiplex.conversion.type.CastingConverter[cost=1, Iterable -> (Iterable) RegistryBlocks<MinecraftKey, Block>]

com.bergerkiller.mountiplex.conversion.Conversion$OutputConverterTree$1[cost=1, Object -> net.minecraft.server.v1_12_R1.MobEffect]

com.bergerkiller.mountiplex.conversion.type.NullConverter[cost=0, (Object) NavigationAbstract -> Object]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, (Set<?>) Set<PacketPlayOutPosition.EnumPlayerTeleportFlags> -> Set<?>]

com.bergerkiller.mountiplex.conversion.type.NullConverter[cost=0, (Object) EntityHuman.EnumChatVisibility -> Object]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.CrashReportSystemDetails -> com.bergerkiller.generated.net.minecraft.server.CrashReportSystemDetailsHandle]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.BaseBlockPositionHandle -> net.minecraft.server.v1_12_R1.BaseBlockPosition]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.PacketPlayOutMap -> com.bergerkiller.generated.net.minecraft.server.PacketPlayOutMapHandle]

com.bergerkiller.mountiplex.conversion.Conversion$OutputConverterTree$1[cost=1, Object -> (Object) EntityHuman.EnumChatVisibility]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, com.bergerkiller.bukkit.common.wrappers.UseAction -> net.minecraft.server.PacketPlayInUseEntity.EnumEntityUseAction]

com.bergerkiller.mountiplex.conversion.Conversion$OutputConverterTree$1[cost=1, Object -> (Object) IChunkProvider]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.ContainerHandle -> net.minecraft.server.v1_12_R1.Container]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.NetworkManager -> com.bergerkiller.generated.net.minecraft.server.NetworkManagerHandle]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.PlayerListHandle -> net.minecraft.server.v1_12_R1.PlayerList]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.ItemHandle -> net.minecraft.server.v1_12_R1.Item]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, com.bergerkiller.bukkit.common.wrappers.PlayerAbilities -> net.minecraft.server.PlayerAbilities]

com.bergerkiller.mountiplex.conversion.type.CastingConverter[cost=1, org.bukkit.World -> (org.bukkit.World) org.bukkit.craftbukkit.CraftWorld]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, com.bergerkiller.bukkit.common.wrappers.DataWatcher.Key<?> -> (DataWatcher.Key<Object>) DataWatcherObject<IChatBaseComponent>]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.EntityMinecartTNTHandle -> net.minecraft.server.v1_12_R1.EntityMinecartTNT]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.MobSpawnerAbstract -> com.bergerkiller.generated.net.minecraft.server.MobSpawnerAbstractHandle]

com.bergerkiller.mountiplex.conversion.Conversion$OutputConverterTree$1[cost=1, Object -> (Object) net.minecraft.server.InventoryCrafting]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.EntityLivingHandle -> net.minecraft.server.v1_12_R1.EntityLiving]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.BlockPositionHandle -> net.minecraft.server.v1_12_R1.BlockPosition]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, List<SlotHandle> -> (List<SlotHandle>) List<Slot>]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.ChunkSectionHandle -> net.minecraft.server.v1_12_R1.ChunkSection]

com.bergerkiller.mountiplex.conversion.type.NullConverter[cost=0, (Object) RegistryMaterials<MinecraftKey, Class<? extends Entity>> -> Object]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, List<CraftInputSlot> -> (List<CraftInputSlot>) NonNullList<RecipeItemStack>]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.BiomeBase.BiomeMeta -> com.bergerkiller.generated.net.minecraft.server.BiomeBaseHandle.BiomeMetaHandle]

com.bergerkiller.mountiplex.conversion.Conversion$OutputConverterTree$1[cost=1, Object -> (Object) net.minecraft.server.InventoryMerchant]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, List<IWorldAccessHandle> -> (List<IWorldAccessHandle>) List<IWorldAccess>]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, org.bukkit.craftbukkit.v1_12_R1.inventory.CraftInventory -> com.bergerkiller.generated.org.bukkit.craftbukkit.inventory.CraftInventoryHandle]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, com.bergerkiller.bukkit.common.wrappers.BlockData -> net.minecraft.server.v1_12_R1.IBlockData]

com.bergerkiller.mountiplex.conversion.type.NullConverter[cost=0, (org.bukkit.Chunk) org.bukkit.craftbukkit.CraftChunk -> org.bukkit.Chunk]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.PacketPlayOutScoreboardScoreHandle -> net.minecraft.server.v1_12_R1.PacketPlayOutScoreboardScore]

com.bergerkiller.mountiplex.conversion.builtin.ArrayConversion$1$5$1[cost=1, net.minecraft.server.v1_12_R1.ChunkSection[] -> com.bergerkiller.bukkit.common.wrappers.ChunkSection[]]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.EntityHumanHandle -> net.minecraft.server.v1_12_R1.EntityHuman]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.WorldType -> com.bergerkiller.generated.net.minecraft.server.WorldTypeHandle]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.PacketPlayOutWindowItems -> com.bergerkiller.generated.net.minecraft.server.PacketPlayOutWindowItemsHandle]

com.bergerkiller.mountiplex.conversion.type.NullConverter[cost=0, (org.bukkit.block.BlockState) CraftBlockState -> org.bukkit.block.BlockState]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.PlayerAbilitiesHandle -> net.minecraft.server.v1_12_R1.PlayerAbilities]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.PacketPlayOutMount -> com.bergerkiller.generated.net.minecraft.server.PacketPlayOutMountHandle]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.DataWatcherRegistryHandle -> net.minecraft.server.v1_12_R1.DataWatcherRegistry]

com.bergerkiller.mountiplex.conversion.type.NullConverter[cost=0, (Object) NetworkManager -> Object]

com.bergerkiller.mountiplex.conversion.type.ChainConverter[cost=2, (List<org.bukkit.inventory.ItemStack>) ItemStack[] -> List<org.bukkit.inventory.ItemStack>] {
  -> com.bergerkiller.mountiplex.conversion.builtin.ArrayConversion$1$5$1[cost=1, (List<org.bukkit.inventory.ItemStack>) ItemStack[] -> org.bukkit.inventory.ItemStack[]]
  -> com.bergerkiller.mountiplex.conversion.builtin.ArrayConversion$1$1[cost=1, org.bukkit.inventory.ItemStack[] -> List<org.bukkit.inventory.ItemStack>]
}

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, List<EntityHandle> -> (List<EntityHandle>) List<Entity>]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, List<MobSpawnerDataHandle> -> (List<MobSpawnerDataHandle>) List<MobSpawnerData>]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, org.bukkit.craftbukkit.v1_12_R1.inventory.CraftInventoryPlayer -> com.bergerkiller.generated.org.bukkit.craftbukkit.inventory.CraftInventoryPlayerHandle]

com.bergerkiller.mountiplex.conversion.type.NullConverter[cost=0, (Object) NavigationListener -> Object]

com.bergerkiller.mountiplex.conversion.builtin.CollectionConversion$CollectionConverter$ElementConverter[cost=1, (Collection<MobEffectHandle>) Collection<MobEffect> -> Collection<MobEffectHandle>]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.NibbleArrayHandle -> net.minecraft.server.v1_12_R1.NibbleArray]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, org.bukkit.entity.Entity -> net.minecraft.server.v1_12_R1.EntityHuman]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.ChunkCoordIntPair -> com.bergerkiller.generated.net.minecraft.server.ChunkCoordIntPairHandle]

com.bergerkiller.mountiplex.conversion.builtin.CollectionConversion$CollectionConverter$ElementConverter[cost=1, List<net.minecraft.server.v1_12_R1.DataWatcher.Item> -> List<com.bergerkiller.bukkit.common.wrappers.DataWatcher.Item>]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.WorldProvider -> com.bergerkiller.generated.net.minecraft.server.WorldProviderHandle]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.RegionFileHandle -> net.minecraft.server.v1_12_R1.RegionFile]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, List<TileEntityHandle> -> (List<TileEntityHandle>) List<TileEntity>]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.org.bukkit.craftbukkit.CraftTravelAgentHandle -> org.bukkit.craftbukkit.v1_12_R1.CraftTravelAgent]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.PacketPlayInTeleportAcceptHandle -> net.minecraft.server.v1_12_R1.PacketPlayInTeleportAccept]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.PacketPlayOutCustomSoundEffect -> com.bergerkiller.generated.net.minecraft.server.PacketPlayOutCustomSoundEffectHandle]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, com.bergerkiller.bukkit.common.wrappers.DataWatcher.Key<?> -> (DataWatcher.Key<Object>) DataWatcherObject<ItemStack>]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, Map<String, NBTBaseHandle> -> (Map<String, NBTBaseHandle>) Map<String, NBTBase>]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.PacketPlayOutMapHandle -> net.minecraft.server.v1_12_R1.PacketPlayOutMap]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.PacketPlayOutPositionHandle -> net.minecraft.server.v1_12_R1.PacketPlayOutPosition]

com.bergerkiller.mountiplex.conversion.builtin.CollectionConversion$CollectionConverter$ElementConverter[cost=1, Set<?> -> (Set<?>) Set<PacketPlayOutPosition.EnumPlayerTeleportFlags>]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, org.bukkit.Material -> net.minecraft.server.Item]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, org.bukkit.entity.Entity -> net.minecraft.server.v1_12_R1.EntityPlayer]

com.bergerkiller.mountiplex.conversion.Conversion$OutputConverterTree$1[cost=1, Object -> (Object) FoodMetaData]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.NBTTagListHandle -> net.minecraft.server.v1_12_R1.NBTTagList]

com.bergerkiller.mountiplex.conversion.type.NullConverter[cost=0, (Object) IAttribute -> Object]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, net.minecraft.server.Block -> org.bukkit.Material]

com.bergerkiller.mountiplex.conversion.type.NullConverter[cost=0, (Object) net.minecraft.server.Chunk -> Object]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.FoodMetaData -> com.bergerkiller.generated.net.minecraft.server.FoodMetaDataHandle]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, org.bukkit.craftbukkit.v1_12_R1.potion.CraftPotionUtil -> com.bergerkiller.generated.org.bukkit.craftbukkit.potion.CraftPotionUtilHandle]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.PacketPlayOutScoreboardScore -> com.bergerkiller.generated.net.minecraft.server.PacketPlayOutScoreboardScoreHandle]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, net.minecraft.server.DataWatcher -> com.bergerkiller.bukkit.common.wrappers.DataWatcher]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.Item -> com.bergerkiller.generated.net.minecraft.server.ItemHandle]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.PacketPlayOutBoss -> com.bergerkiller.generated.net.minecraft.server.PacketPlayOutBossHandle]

com.bergerkiller.mountiplex.conversion.builtin.CollectionConversion$CollectionConverter$ElementConverter[cost=1, Collection<net.minecraft.server.v1_12_R1.Chunk> -> Collection<org.bukkit.Chunk>]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.PacketPlayInTabCompleteHandle -> net.minecraft.server.v1_12_R1.PacketPlayInTabComplete]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.TileEntityHopperHandle -> net.minecraft.server.v1_12_R1.TileEntityHopper]

com.bergerkiller.mountiplex.conversion.Conversion$OutputConverterTree$1[cost=1, Object -> IBlockState<?>]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.PacketPlayOutUnloadChunk -> com.bergerkiller.generated.net.minecraft.server.PacketPlayOutUnloadChunkHandle]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.EnumHand -> com.bergerkiller.generated.net.minecraft.server.EnumHandHandle]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.ChatMessageType -> com.bergerkiller.generated.net.minecraft.server.ChatMessageTypeHandle]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.IBlockStateHandle -> net.minecraft.server.v1_12_R1.IBlockState]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.EnumMainHand -> com.bergerkiller.generated.net.minecraft.server.EnumMainHandHandle]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.IPlayerFileDataHandle -> net.minecraft.server.v1_12_R1.IPlayerFileData]

com.bergerkiller.mountiplex.conversion.type.NullConverter[cost=0, Float -> Float]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.Packet -> com.bergerkiller.generated.net.minecraft.server.PacketHandle]

com.bergerkiller.mountiplex.conversion.Conversion$OutputConverterTree$1[cost=1, Object -> (Object) PacketPlayOutBoss.Action]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.TileEntity -> com.bergerkiller.generated.net.minecraft.server.TileEntityHandle]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.BaseBlockPosition -> com.bergerkiller.generated.net.minecraft.server.BaseBlockPositionHandle]

com.bergerkiller.mountiplex.conversion.type.NullConverter[cost=0, Integer -> Integer]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, net.minecraft.server.Entity -> org.bukkit.entity.Player]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.BlockHandle -> net.minecraft.server.v1_12_R1.Block]

com.bergerkiller.mountiplex.conversion.builtin.CollectionConversion$CollectionConverter$ElementConverter[cost=1, (List<ItemStackHandle>) List<ItemStack> -> List<ItemStackHandle>]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, org.bukkit.craftbukkit.v1_12_R1.util.LongHashSet -> com.bergerkiller.generated.org.bukkit.craftbukkit.util.LongHashSetHandle]

com.bergerkiller.mountiplex.conversion.type.NullConverter[cost=0, (Object) IChunkLoader -> Object]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.WorldNBTStorage -> com.bergerkiller.generated.net.minecraft.server.WorldNBTStorageHandle]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.PacketPlayOutRemoveEntityEffectHandle -> net.minecraft.server.v1_12_R1.PacketPlayOutRemoveEntityEffect]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, List<NBTBaseHandle> -> (List<NBTBaseHandle>) List<NBTBase>]

com.bergerkiller.mountiplex.conversion.type.CastingConverter[cost=1, org.bukkit.Server -> (org.bukkit.Server) CraftServer]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, org.bukkit.plugin.PluginDescriptionFile -> com.bergerkiller.generated.org.bukkit.plugin.PluginDescriptionFileHandle]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, org.bukkit.craftbukkit.v1_12_R1.inventory.CraftItemStack -> com.bergerkiller.generated.org.bukkit.craftbukkit.inventory.CraftItemStackHandle]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.BiomeBaseHandle.BiomeMetaHandle -> net.minecraft.server.v1_12_R1.BiomeBase.BiomeMeta]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.BiomeBaseHandle -> net.minecraft.server.v1_12_R1.BiomeBase]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, Collection<MobEffectHandle> -> (Collection<MobEffectHandle>) Collection<MobEffect>]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.EntityMinecartTNT -> com.bergerkiller.generated.net.minecraft.server.EntityMinecartTNTHandle]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.TileEntityFurnaceHandle -> net.minecraft.server.v1_12_R1.TileEntityFurnace]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.ShapedRecipes -> com.bergerkiller.generated.net.minecraft.server.ShapedRecipesHandle]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, net.minecraft.server.EntitySlice<?> -> List<Object>]

com.bergerkiller.mountiplex.conversion.Conversion$OutputConverterTree$1[cost=1, Object -> net.minecraft.server.v1_12_R1.IInventory]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.ChunkProviderServerHandle -> net.minecraft.server.v1_12_R1.ChunkProviderServer]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.EntityMinecartRideableHandle -> net.minecraft.server.v1_12_R1.EntityMinecartRideable]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.RecipeItemStackHandle -> net.minecraft.server.v1_12_R1.RecipeItemStack]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, net.minecraft.server.SoundEffect -> com.bergerkiller.bukkit.common.wrappers.ResourceKey]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.ShapelessRecipesHandle -> net.minecraft.server.v1_12_R1.ShapelessRecipes]

com.bergerkiller.mountiplex.conversion.Conversion$OutputConverterTree$1[cost=1, Object -> (Object) IAttribute]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, net.minecraft.server.EntityTracker -> com.bergerkiller.bukkit.common.wrappers.EntityTracker]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.InventoryEnderChest -> com.bergerkiller.generated.net.minecraft.server.InventoryEnderChestHandle]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.PacketPlayOutEntity -> com.bergerkiller.generated.net.minecraft.server.PacketPlayOutEntityHandle]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.org.bukkit.craftbukkit.inventory.CraftInventoryFurnaceHandle -> org.bukkit.craftbukkit.v1_12_R1.inventory.CraftInventoryFurnace]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, List<com.bergerkiller.bukkit.common.wrappers.DataWatcher.Item<Object>> -> (List<com.bergerkiller.bukkit.common.wrappers.DataWatcher.Item<Object>>) List<DataWatcher.Item<?>>]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.Slot -> com.bergerkiller.generated.net.minecraft.server.SlotHandle]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.PacketPlayInArmAnimation -> com.bergerkiller.generated.net.minecraft.server.PacketPlayInArmAnimationHandle]

com.bergerkiller.mountiplex.conversion.type.NullConverter[cost=0, (org.bukkit.inventory.BrewerInventory) CraftInventoryBrewer -> org.bukkit.inventory.BrewerInventory]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, String -> com.bergerkiller.bukkit.common.wrappers.ChatText]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.Vec3DHandle -> net.minecraft.server.v1_12_R1.Vec3D]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.PacketPlayInSetCreativeSlotHandle -> net.minecraft.server.v1_12_R1.PacketPlayInSetCreativeSlot]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.PacketPlayInResourcePackStatus -> com.bergerkiller.generated.net.minecraft.server.PacketPlayInResourcePackStatusHandle]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, org.bukkit.block.BlockState -> net.minecraft.server.TileEntity]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, net.minecraft.server.EnumMainHand -> com.bergerkiller.bukkit.common.wrappers.HumanHand]

com.bergerkiller.mountiplex.conversion.type.NullConverter[cost=0, (Iterable) RegistryBlocks<MinecraftKey, Block> -> Iterable]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.DataWatcherHandle.ItemHandle -> net.minecraft.server.v1_12_R1.DataWatcher.Item]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.PacketPlayOutCombatEvent -> com.bergerkiller.generated.net.minecraft.server.PacketPlayOutCombatEventHandle]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, List<?> -> net.minecraft.server.EntitySlice<net.minecraft.server.Entity>]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.PacketPlayOutAttachEntity -> com.bergerkiller.generated.net.minecraft.server.PacketPlayOutAttachEntityHandle]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.PacketPlayOutSetCooldown -> com.bergerkiller.generated.net.minecraft.server.PacketPlayOutSetCooldownHandle]

com.bergerkiller.mountiplex.conversion.Conversion$OutputConverterTree$1[cost=1, Object -> (Object) PlayerConnection]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.org.bukkit.craftbukkit.block.CraftBlockStateHandle -> org.bukkit.craftbukkit.v1_12_R1.block.CraftBlockState]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.PacketPlayOutEntityHandle -> net.minecraft.server.v1_12_R1.PacketPlayOutEntity]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.EntityTrackerEntry -> com.bergerkiller.generated.net.minecraft.server.EntityTrackerEntryHandle]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, com.bergerkiller.bukkit.common.wrappers.DataWatcher -> net.minecraft.server.DataWatcher]

com.bergerkiller.mountiplex.conversion.type.NullConverter[cost=0, (org.bukkit.inventory.ItemStack) CraftItemStack -> org.bukkit.inventory.ItemStack]

com.bergerkiller.mountiplex.conversion.builtin.CollectionConversion$CollectionConverter$ElementConverter[cost=1, Set<net.minecraft.server.v1_12_R1.EntityPlayer> -> Set<org.bukkit.entity.Player>]

com.bergerkiller.mountiplex.conversion.builtin.ArrayConversion$1$5$1[cost=1, (ChunkSectionHandle[]) ChunkSection[] -> ChunkSectionHandle[]]

com.bergerkiller.mountiplex.conversion.type.NullConverter[cost=0, (org.bukkit.World) org.bukkit.craftbukkit.CraftWorld -> org.bukkit.World]

com.bergerkiller.mountiplex.conversion.type.NullConverter[cost=0, (Object) net.minecraft.server.WorldServer -> Object]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, Map<java.util.UUID, EntityHandle> -> (Map<java.util.UUID, EntityHandle>) Map<java.util.UUID, Entity>]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.PlayerConnection -> com.bergerkiller.generated.net.minecraft.server.PlayerConnectionHandle]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.IDataManager -> com.bergerkiller.generated.net.minecraft.server.IDataManagerHandle]

com.bergerkiller.mountiplex.conversion.Conversion$OutputConverterTree$1[cost=1, Object -> net.md_5.bungee.api.chat.BaseComponent]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, net.minecraft.server.Packet -> com.bergerkiller.bukkit.common.protocol.CommonPacket]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, net.minecraft.server.ChunkCoordIntPair -> com.bergerkiller.bukkit.common.bases.IntVector2]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.PacketPlayOutEntityHandle.PacketPlayOutEntityLookHandle -> net.minecraft.server.v1_12_R1.PacketPlayOutEntity.PacketPlayOutEntityLook]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.ReportedExceptionHandle -> net.minecraft.server.v1_12_R1.ReportedException]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.SlotHandle -> net.minecraft.server.v1_12_R1.Slot]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, org.bukkit.craftbukkit.v1_12_R1.util.CraftChatMessage -> com.bergerkiller.generated.org.bukkit.craftbukkit.util.CraftChatMessageHandle]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.org.bukkit.craftbukkit.inventory.CraftInventoryPlayerHandle -> org.bukkit.craftbukkit.v1_12_R1.inventory.CraftInventoryPlayer]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, Map<org.bukkit.inventory.ItemStack, org.bukkit.inventory.ItemStack> -> (Map<org.bukkit.inventory.ItemStack, org.bukkit.inventory.ItemStack>) Map<ItemStack, ItemStack>]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, net.minecraft.server.PacketPlayInUseEntity.EnumEntityUseAction -> com.bergerkiller.bukkit.common.wrappers.UseAction]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, org.bukkit.Chunk -> net.minecraft.server.Chunk]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.org.bukkit.craftbukkit.inventory.CraftInventoryHandle -> org.bukkit.craftbukkit.v1_12_R1.inventory.CraftInventory]

com.bergerkiller.mountiplex.conversion.type.NullConverter[cost=0, (Object) Item -> Object]

com.bergerkiller.mountiplex.conversion.Conversion$OutputConverterTree$1[cost=1, Object -> (Object) PacketPlayOutCombatEvent.EnumCombatEventType]

com.bergerkiller.mountiplex.conversion.builtin.ArrayConversion$1$5$1[cost=1, (List<Object>[]) List<Entity>[] -> List<Object>[]]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, net.minecraft.server.DataWatcherObject<?> -> DataWatcher.Key<Object>]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, org.bukkit.inventory.PlayerInventory -> com.bergerkiller.generated.org.bukkit.inventory.PlayerInventoryHandle]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, net.minecraft.server.IntHashMap<?> -> com.bergerkiller.bukkit.common.wrappers.IntHashMap<Object>]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.PacketPlayOutLogin -> com.bergerkiller.generated.net.minecraft.server.PacketPlayOutLoginHandle]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.Entity -> com.bergerkiller.generated.net.minecraft.server.EntityHandle]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.AttributeMapServer -> com.bergerkiller.generated.net.minecraft.server.AttributeMapServerHandle]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.RecipesFurnaceHandle -> net.minecraft.server.v1_12_R1.RecipesFurnace]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, Collection<org.bukkit.block.BlockState> -> Collection<net.minecraft.server.v1_12_R1.TileEntity>]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.EntityHangingHandle -> net.minecraft.server.v1_12_R1.EntityHanging]

com.bergerkiller.mountiplex.conversion.type.CastingConverter[cost=1, java.lang.Class<?> -> (java.lang.Class<?>) java.lang.Class<? extends EntityInsentient>]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.PacketPlayInUseItem -> com.bergerkiller.generated.net.minecraft.server.PacketPlayInUseItemHandle]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.EntityPlayerHandle -> net.minecraft.server.v1_12_R1.EntityPlayer]

com.bergerkiller.mountiplex.conversion.builtin.CollectionConversion$CollectionConverter$ElementConverter[cost=1, List<net.minecraft.server.v1_12_R1.Entity> -> List<org.bukkit.entity.Entity>]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.MovingObjectPosition -> com.bergerkiller.generated.net.minecraft.server.MovingObjectPositionHandle]

com.bergerkiller.mountiplex.conversion.type.NullConverter[cost=0, AttributeInstance -> Object]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, net.minecraft.server.NBTTagList -> com.bergerkiller.bukkit.common.nbt.CommonTagList]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, net.minecraft.server.Vec3D -> org.bukkit.util.Vector]

com.bergerkiller.mountiplex.conversion.Conversion$OutputConverterTree$1[cost=1, Object -> net.minecraft.server.v1_12_R1.IChatBaseComponent]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.MobEffect -> com.bergerkiller.generated.net.minecraft.server.MobEffectHandle]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.ChunkCoordIntPairHandle -> net.minecraft.server.v1_12_R1.ChunkCoordIntPair]

com.bergerkiller.mountiplex.conversion.Conversion$OutputConverterTree$1[cost=1, Object -> (Object) net.minecraft.server.TileEntityBeacon]

com.bergerkiller.mountiplex.conversion.builtin.ArrayConversion$1$5$1[cost=1, ChunkSectionHandle[] -> net.minecraft.server.v1_12_R1.ChunkSection[]]

com.bergerkiller.mountiplex.conversion.type.NullConverter[cost=0, (Object) InventoryEnderChest -> Object]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.EnumDirectionHandle.EnumAxisHandle -> net.minecraft.server.v1_12_R1.EnumDirection.EnumAxis]

com.bergerkiller.mountiplex.conversion.builtin.CollectionConversion$CollectionConverter$ElementConverter[cost=1, (List<com.bergerkiller.bukkit.common.wrappers.DataWatcher.Item<Object>>) List<DataWatcher.Item<?>> -> List<com.bergerkiller.bukkit.common.wrappers.DataWatcher.Item<Object>>]

com.bergerkiller.mountiplex.conversion.type.NullConverter[cost=0, (org.bukkit.inventory.FurnaceInventory) CraftInventoryFurnace -> org.bukkit.inventory.FurnaceInventory]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, org.bukkit.WorldType -> net.minecraft.server.WorldType]

com.bergerkiller.mountiplex.conversion.type.NullConverter[cost=0, (Iterable) RegistryMaterials<MinecraftKey, IRecipe> -> Iterable]

com.bergerkiller.mountiplex.conversion.builtin.ArrayConversion$1$5$1[cost=1, com.bergerkiller.bukkit.common.wrappers.ChunkSection[] -> net.minecraft.server.v1_12_R1.ChunkSection[]]

com.bergerkiller.mountiplex.conversion.type.NullConverter[cost=0, (org.bukkit.entity.Entity) CraftEntity -> org.bukkit.entity.Entity]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.PacketPlayOutTitleHandle.EnumTitleActionHandle -> net.minecraft.server.v1_12_R1.PacketPlayOutTitle.EnumTitleAction]

com.bergerkiller.mountiplex.conversion.Conversion$OutputConverterTree$1[cost=1, Object -> (org.bukkit.inventory.MainHand) EnumHand]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.PacketPlayOutAttachEntityHandle -> net.minecraft.server.v1_12_R1.PacketPlayOutAttachEntity]

com.bergerkiller.mountiplex.conversion.builtin.MapConversion$MapConverter$ElementConverter[cost=1, (Map<EnumProtocolDirectionHandle, BiMap>) Map<EnumProtocolDirection, BiMap<Integer, Class<? extends Packet<?>>>> -> Map<EnumProtocolDirectionHandle, BiMap>]

com.bergerkiller.mountiplex.conversion.type.NullConverter[cost=0, (Object) net.minecraft.server.MobEffect -> Object]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.SoundEffectType -> com.bergerkiller.generated.net.minecraft.server.SoundEffectTypeHandle]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.WorldDataHandle -> net.minecraft.server.v1_12_R1.WorldData]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.EntityMinecartHopperHandle -> net.minecraft.server.v1_12_R1.EntityMinecartHopper]

com.bergerkiller.mountiplex.conversion.builtin.ArrayConversion$1$5$1[cost=1, List<Object>[] -> net.minecraft.server.v1_12_R1.EntitySlice<net.minecraft.server.v1_12_R1.Entity>[]]

com.bergerkiller.mountiplex.conversion.builtin.MapConversion$MapConverter$ElementConverter[cost=1, (Map<String, NBTBaseHandle>) Map<String, NBTBase> -> Map<String, NBTBaseHandle>]

com.bergerkiller.mountiplex.conversion.builtin.CollectionConversion$CollectionConverter$ElementConverter[cost=1, List<net.minecraft.server.v1_12_R1.ItemStack> -> List<org.bukkit.inventory.ItemStack>]

com.bergerkiller.mountiplex.conversion.Conversion$OutputConverterTree$1[cost=1, Object -> (Object) DataWatcherSerializer<?>]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, org.bukkit.util.Vector -> net.minecraft.server.Vec3D]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.BlockFenceGateHandle -> net.minecraft.server.v1_12_R1.BlockFenceGate]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.PacketPlayOutSpawnEntityWeatherHandle -> net.minecraft.server.v1_12_R1.PacketPlayOutSpawnEntityWeather]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.NBTBaseHandle -> net.minecraft.server.v1_12_R1.NBTBase]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.DataWatcherObject -> com.bergerkiller.generated.net.minecraft.server.DataWatcherObjectHandle]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, net.minecraft.server.DataWatcher.Item<?> -> com.bergerkiller.bukkit.common.wrappers.DataWatcher.Item<T>]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.EnumDifficulty -> com.bergerkiller.generated.net.minecraft.server.EnumDifficultyHandle]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.MapIconHandle.TypeHandle -> net.minecraft.server.v1_12_R1.MapIcon.Type]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.NonNullListHandle -> net.minecraft.server.v1_12_R1.NonNullList]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, com.bergerkiller.bukkit.common.wrappers.ChatText -> net.minecraft.server.IChatBaseComponent]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, net.minecraft.server.DataWatcherObject<?> -> com.bergerkiller.bukkit.common.wrappers.DataWatcher.Key<?>]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.PacketPlayOutEntityHandle.PacketPlayOutRelEntityMoveHandle -> net.minecraft.server.v1_12_R1.PacketPlayOutEntity.PacketPlayOutRelEntityMove]

com.bergerkiller.mountiplex.conversion.builtin.CollectionConversion$CollectionConverter$ElementConverter[cost=1, List<AxisAlignedBBHandle> -> (List<AxisAlignedBBHandle>) List<AxisAlignedBB>]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, List<WorldServerHandle> -> (List<WorldServerHandle>) List<WorldServer>]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.DamageSource -> com.bergerkiller.generated.net.minecraft.server.DamageSourceHandle]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.PacketPlayInArmAnimationHandle -> net.minecraft.server.v1_12_R1.PacketPlayInArmAnimation]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, com.bergerkiller.bukkit.common.wrappers.DataWatcher.Key<?> -> (DataWatcher.Key<Integer>) DataWatcherObject<Integer>]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.EntityMinecartCommandBlockHandle -> net.minecraft.server.v1_12_R1.EntityMinecartCommandBlock]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.PacketPlayInUpdateSignHandle -> net.minecraft.server.v1_12_R1.PacketPlayInUpdateSign]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, org.bukkit.inventory.MainHand -> com.bergerkiller.generated.org.bukkit.inventory.MainHandHandle]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, com.mojang.authlib.GameProfile -> com.bergerkiller.generated.com.mojang.authlib.GameProfileHandle]

com.bergerkiller.mountiplex.conversion.builtin.CollectionConversion$CollectionConverter$ElementConverter[cost=1, Collection<net.minecraft.server.v1_12_R1.TileEntity> -> Collection<org.bukkit.block.BlockState>]

com.bergerkiller.mountiplex.conversion.type.NullConverter[cost=0, (Object) IChatBaseComponent -> Object]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.PacketPlayOutSpawnEntityLivingHandle -> net.minecraft.server.v1_12_R1.PacketPlayOutSpawnEntityLiving]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, com.bergerkiller.bukkit.common.wrappers.HumanHand -> net.minecraft.server.EnumMainHand]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.NibbleArray -> com.bergerkiller.generated.net.minecraft.server.NibbleArrayHandle]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.MapIcon.Type -> com.bergerkiller.generated.net.minecraft.server.MapIconHandle.TypeHandle]

com.bergerkiller.mountiplex.conversion.type.CastingConverter[cost=1, Iterable -> (Iterable) RegistryMaterials<MinecraftKey, IRecipe>]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.Explosion -> com.bergerkiller.generated.net.minecraft.server.ExplosionHandle]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.EntitySlice -> com.bergerkiller.generated.net.minecraft.server.EntitySliceHandle]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.PacketPlayOutLoginHandle -> net.minecraft.server.v1_12_R1.PacketPlayOutLogin]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.EntityPlayer -> com.bergerkiller.generated.net.minecraft.server.EntityPlayerHandle]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, org.bukkit.craftbukkit.v1_12_R1.inventory.CraftInventoryFurnace -> com.bergerkiller.generated.org.bukkit.craftbukkit.inventory.CraftInventoryFurnaceHandle]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.IRecipeHandle -> net.minecraft.server.v1_12_R1.IRecipe]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.org.bukkit.craftbukkit.util.LongHashSetHandle -> org.bukkit.craftbukkit.v1_12_R1.util.LongHashSet]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.org.bukkit.craftbukkit.inventory.CraftInventoryCraftingHandle -> org.bukkit.craftbukkit.v1_12_R1.inventory.CraftInventoryCrafting]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.EntityInsentient -> com.bergerkiller.generated.net.minecraft.server.EntityInsentientHandle]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, com.bergerkiller.bukkit.common.wrappers.DataWatcher.Key<?> -> (com.bergerkiller.bukkit.common.wrappers.DataWatcher.Key<?>) DataWatcherObject<T>]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, org.bukkit.entity.Entity -> net.minecraft.server.v1_12_R1.EntityHuman]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, org.bukkit.inventory.Inventory -> com.bergerkiller.generated.org.bukkit.inventory.InventoryHandle]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.PlayerChunkMap -> com.bergerkiller.generated.net.minecraft.server.PlayerChunkMapHandle]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.DamageSourceHandle -> net.minecraft.server.v1_12_R1.DamageSource]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, Collection<Object> -> (Collection<Object>) Collection<AttributeInstance>]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.WeightedRandom.WeightedRandomChoice -> com.bergerkiller.generated.net.minecraft.server.WeightedRandomHandle.WeightedRandomChoiceHandle]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, net.minecraft.server.World -> org.bukkit.World]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.org.bukkit.craftbukkit.block.CraftBlockHandle -> org.bukkit.craftbukkit.v1_12_R1.block.CraftBlock]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, com.bergerkiller.bukkit.common.wrappers.DataWatcher.Key<?> -> (DataWatcher.Key<Boolean>) DataWatcherObject<Boolean>]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.ChunkHandle -> net.minecraft.server.v1_12_R1.Chunk]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, net.minecraft.server.Entity -> org.bukkit.entity.Item]

com.bergerkiller.mountiplex.conversion.Conversion$OutputConverterTree$1[cost=1, Object -> (Object) NavigationListener]

com.bergerkiller.mountiplex.conversion.type.NullConverter[cost=0, (org.bukkit.Server) org.bukkit.craftbukkit.CraftServer -> org.bukkit.Server]

com.bergerkiller.mountiplex.conversion.builtin.CollectionConversion$CollectionConverter$ElementConverter[cost=1, (List<SlotHandle>) List<Slot> -> List<SlotHandle>]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.RegistryMaterials -> com.bergerkiller.generated.net.minecraft.server.RegistryMaterialsHandle]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.PacketPlayOutSpawnEntityWeather -> com.bergerkiller.generated.net.minecraft.server.PacketPlayOutSpawnEntityWeatherHandle]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, List<org.bukkit.inventory.ItemStack> -> (List<org.bukkit.inventory.ItemStack>) NonNullList<ItemStack>]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.IntHashMap -> com.bergerkiller.generated.net.minecraft.server.IntHashMapHandle]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.EntityMinecartAbstractHandle -> net.minecraft.server.v1_12_R1.EntityMinecartAbstract]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.DataPaletteBlockHandle -> net.minecraft.server.v1_12_R1.DataPaletteBlock]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.MethodProfiler -> com.bergerkiller.generated.net.minecraft.server.MethodProfilerHandle]

com.bergerkiller.mountiplex.conversion.builtin.CollectionConversion$CollectionConverter$ElementConverter[cost=1, List<net.minecraft.server.v1_12_R1.DataWatcher> -> List<com.bergerkiller.bukkit.common.wrappers.DataWatcher>]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.IInventory -> com.bergerkiller.generated.net.minecraft.server.IInventoryHandle]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, net.minecraft.server.RecipeItemStack -> com.bergerkiller.bukkit.common.inventory.CraftInputSlot]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, net.minecraft.server.Entity -> org.bukkit.entity.Entity]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.EntityItem -> com.bergerkiller.generated.net.minecraft.server.EntityItemHandle]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, com.bergerkiller.bukkit.common.bases.IntVector3 -> net.minecraft.server.BlockPosition]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, net.minecraft.server.DataWatcherObject<?> -> DataWatcher.Key<Byte>]

com.bergerkiller.mountiplex.conversion.builtin.ArrayConversion$1$5$1[cost=1, net.minecraft.server.v1_12_R1.EntitySlice<net.minecraft.server.v1_12_R1.Entity>[] -> List<Object>[]]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.Block -> com.bergerkiller.generated.net.minecraft.server.BlockHandle]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.EntityTypesHandle -> net.minecraft.server.v1_12_R1.EntityTypes]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.IInventoryHandle -> net.minecraft.server.v1_12_R1.IInventory]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.EnumMoveType -> com.bergerkiller.generated.net.minecraft.server.EnumMoveTypeHandle]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.DedicatedPlayerList -> com.bergerkiller.generated.net.minecraft.server.DedicatedPlayerListHandle]

com.bergerkiller.mountiplex.conversion.builtin.ArrayConversion$1$5$1[cost=1, com.bergerkiller.bukkit.common.wrappers.ChatText[] -> net.minecraft.server.v1_12_R1.IChatBaseComponent[]]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.PacketPlayOutEntityEquipmentHandle -> net.minecraft.server.v1_12_R1.PacketPlayOutEntityEquipment]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.ChatMessageTypeHandle -> net.minecraft.server.v1_12_R1.ChatMessageType]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, com.bergerkiller.bukkit.common.wrappers.ChatMessageType -> net.minecraft.server.ChatMessageType]

com.bergerkiller.mountiplex.conversion.type.NullConverter[cost=0, (Object) BossBattle.BarColor -> Object]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, com.bergerkiller.bukkit.common.wrappers.DataWatcher.Key<?> -> (DataWatcher.Key<String>) DataWatcherObject<String>]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.NBTTagCompound -> com.bergerkiller.generated.net.minecraft.server.NBTTagCompoundHandle]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.NBTTagCompoundHandle -> net.minecraft.server.v1_12_R1.NBTTagCompound]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.DedicatedPlayerListHandle -> net.minecraft.server.v1_12_R1.DedicatedPlayerList]

com.bergerkiller.mountiplex.conversion.builtin.CollectionConversion$CollectionConverter$ElementConverter[cost=1, (List<BiomeMetaHandle>) List<BiomeBase.BiomeMeta> -> List<BiomeMetaHandle>]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.ChunkRegionLoaderHandle -> net.minecraft.server.v1_12_R1.ChunkRegionLoader]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.PacketPlayOutSpawnEntity -> com.bergerkiller.generated.net.minecraft.server.PacketPlayOutSpawnEntityHandle]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.PacketPlayOutScoreboardScore.EnumScoreboardAction -> com.bergerkiller.generated.net.minecraft.server.PacketPlayOutScoreboardScoreHandle.EnumScoreboardActionHandle]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, com.bergerkiller.bukkit.common.wrappers.ResourceKey -> String]

com.bergerkiller.mountiplex.conversion.type.NullConverter[cost=0, (Object) PlayerConnection -> Object]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.RecipesFurnace -> com.bergerkiller.generated.net.minecraft.server.RecipesFurnaceHandle]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.RegionFileCacheHandle -> net.minecraft.server.v1_12_R1.RegionFileCache]

com.bergerkiller.mountiplex.conversion.Conversion$OutputConverterTree$1[cost=1, Object -> (Object) RegistryMaterials<MinecraftKey, Class<? extends Entity>>]

com.bergerkiller.mountiplex.conversion.builtin.CollectionConversion$CollectionConverter$ElementConverter[cost=1, (List<NBTBaseHandle>) List<NBTBase> -> List<NBTBaseHandle>]

com.bergerkiller.mountiplex.conversion.type.NullConverter[cost=0, PacketPlayOutPosition.EnumPlayerTeleportFlags -> ?]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, Map<java.io.File, RegionFileHandle> -> (Map<java.io.File, RegionFileHandle>) Map<java.io.File, RegionFile>]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, com.bergerkiller.bukkit.common.wrappers.EntityTracker -> net.minecraft.server.EntityTracker]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.Blocks -> com.bergerkiller.generated.net.minecraft.server.BlocksHandle]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.EntityHandle -> net.minecraft.server.v1_12_R1.Entity]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.org.bukkit.plugin.RegisteredListenerHandle -> org.bukkit.plugin.RegisteredListener]

com.bergerkiller.mountiplex.conversion.type.NullConverter[cost=0, (org.bukkit.inventory.CraftingInventory) CraftInventoryCrafting -> org.bukkit.inventory.CraftingInventory]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.org.bukkit.craftbukkit.CraftWorldHandle -> org.bukkit.craftbukkit.v1_12_R1.CraftWorld]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, org.bukkit.block.BlockFace -> net.minecraft.server.EnumDirection]

com.bergerkiller.mountiplex.conversion.Conversion$OutputConverterTree$1[cost=1, Object -> (Object) net.minecraft.server.TileEntityFurnace]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.MethodProfilerHandle -> net.minecraft.server.v1_12_R1.MethodProfiler]

com.bergerkiller.mountiplex.conversion.builtin.CollectionConversion$CollectionConverter$ElementConverter[cost=1, (List<IWorldAccessHandle>) List<IWorldAccess> -> List<IWorldAccessHandle>]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.Vec3D -> com.bergerkiller.generated.net.minecraft.server.Vec3DHandle]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.DataWatcherHandle -> net.minecraft.server.v1_12_R1.DataWatcher]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.RegistryMaterials -> com.bergerkiller.generated.net.minecraft.server.RegistryMaterialsHandle]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.EnumDirection -> com.bergerkiller.generated.net.minecraft.server.EnumDirectionHandle]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.org.bukkit.craftbukkit.util.CraftMagicNumbersHandle -> org.bukkit.craftbukkit.v1_12_R1.util.CraftMagicNumbers]

com.bergerkiller.mountiplex.conversion.type.NullConverter[cost=0, (Object) org.bukkit.inventory.MainHand -> Object]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.ChunkProviderServer -> com.bergerkiller.generated.net.minecraft.server.ChunkProviderServerHandle]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.RegistryBlockIDHandle -> net.minecraft.server.v1_12_R1.RegistryBlockID]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, net.minecraft.server.DataWatcher.Item<?> -> com.bergerkiller.bukkit.common.wrappers.DataWatcher.Item<Object>]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.WorldHandle -> net.minecraft.server.v1_12_R1.World]

com.bergerkiller.mountiplex.conversion.Conversion$OutputConverterTree$1[cost=1, Object -> (Object) InventoryEnderChest]

com.bergerkiller.mountiplex.conversion.type.NullConverter[cost=0, Class<?> -> (Class<?>) Class<T>]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, org.bukkit.map.MapCursor -> net.minecraft.server.MapIcon]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.IWorldAccess -> com.bergerkiller.generated.net.minecraft.server.IWorldAccessHandle]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, org.bukkit.entity.Entity -> com.bergerkiller.generated.org.bukkit.entity.EntityHandle]

com.bergerkiller.mountiplex.conversion.Conversion$OutputConverterTree$1[cost=1, Object -> net.minecraft.server.v1_12_R1.Item]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.AttributeMapServerHandle -> net.minecraft.server.v1_12_R1.AttributeMapServer]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.ChunkRegionLoader -> com.bergerkiller.generated.net.minecraft.server.ChunkRegionLoaderHandle]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.EntityTrackerEntryHandle -> net.minecraft.server.v1_12_R1.EntityTrackerEntry]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, List<ItemStackHandle> -> (List<ItemStackHandle>) List<ItemStack>]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, net.minecraft.server.SoundCategory -> String]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.PortalTravelAgentHandle -> net.minecraft.server.v1_12_R1.PortalTravelAgent]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, org.bukkit.entity.Entity -> (org.bukkit.entity.Arrow) EntityArrow]

com.bergerkiller.mountiplex.conversion.builtin.CollectionConversion$CollectionConverter$ElementConverter[cost=1, List<org.bukkit.entity.Player> -> (List<org.bukkit.entity.Player>) List<EntityHuman>]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, net.minecraft.server.DataWatcher.Item<?> -> com.bergerkiller.bukkit.common.wrappers.DataWatcher.Item<?>]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, net.minecraft.server.MapIcon -> org.bukkit.map.MapCursor]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, String -> net.minecraft.server.SoundCategory]

com.bergerkiller.mountiplex.conversion.builtin.CollectionConversion$CollectionConverter$ElementConverter[cost=1, (List<EntityHandle>) List<Entity> -> List<EntityHandle>]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.org.bukkit.craftbukkit.CraftServerHandle -> org.bukkit.craftbukkit.v1_12_R1.CraftServer]

com.bergerkiller.mountiplex.conversion.builtin.CollectionConversion$CollectionConverter$ElementConverter[cost=1, (List<MobSpawnerDataHandle>) List<MobSpawnerData> -> List<MobSpawnerDataHandle>]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, org.bukkit.craftbukkit.v1_12_R1.CraftWorld -> com.bergerkiller.generated.org.bukkit.craftbukkit.CraftWorldHandle]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, com.bergerkiller.bukkit.common.inventory.CraftInputSlot -> net.minecraft.server.RecipeItemStack]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.RegionFile -> com.bergerkiller.generated.net.minecraft.server.RegionFileHandle]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, net.minecraft.server.DataWatcherObject<?> -> DataWatcher.Key<Float>]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.PacketPlayOutTitle -> com.bergerkiller.generated.net.minecraft.server.PacketPlayOutTitleHandle]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, org.bukkit.craftbukkit.v1_12_R1.CraftSound -> com.bergerkiller.generated.org.bukkit.craftbukkit.CraftSoundHandle]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.CraftingManager -> com.bergerkiller.generated.net.minecraft.server.CraftingManagerHandle]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.EnumParticleHandle -> net.minecraft.server.v1_12_R1.EnumParticle]

com.bergerkiller.mountiplex.conversion.type.NullConverter[cost=0, Entity -> Object]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.PacketPlayInUseEntity.EnumEntityUseAction -> com.bergerkiller.generated.net.minecraft.server.PacketPlayInUseEntityHandle.EnumEntityUseActionHandle]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.PacketPlayOutCombatEventHandle -> net.minecraft.server.v1_12_R1.PacketPlayOutCombatEvent]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.EntityMinecartHopper -> com.bergerkiller.generated.net.minecraft.server.EntityMinecartHopperHandle]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.EnumParticle -> com.bergerkiller.generated.net.minecraft.server.EnumParticleHandle]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.org.bukkit.craftbukkit.inventory.CraftInventoryBeaconHandle -> org.bukkit.craftbukkit.v1_12_R1.inventory.CraftInventoryBeacon]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, byte -> net.minecraft.server.MapIcon.Type]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.org.bukkit.craftbukkit.CraftChunkHandle -> org.bukkit.craftbukkit.v1_12_R1.CraftChunk]

com.bergerkiller.mountiplex.conversion.type.NullConverter[cost=0, Byte -> Byte]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.PacketPlayInTabComplete -> com.bergerkiller.generated.net.minecraft.server.PacketPlayInTabCompleteHandle]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.AttributeInstance -> com.bergerkiller.generated.net.minecraft.server.AttributeInstanceHandle]

com.bergerkiller.mountiplex.conversion.builtin.MapConversion$MapConverter$ElementConverter[cost=1, (Map<IntVector3, org.bukkit.block.BlockState>) Map<BlockPosition, TileEntity> -> Map<IntVector3, org.bukkit.block.BlockState>]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, net.minecraft.server.World -> org.bukkit.World]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.RegistryBlockID -> com.bergerkiller.generated.net.minecraft.server.RegistryBlockIDHandle]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.PacketPlayOutEntityTeleport -> com.bergerkiller.generated.net.minecraft.server.PacketPlayOutEntityTeleportHandle]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.BlockFenceGate -> com.bergerkiller.generated.net.minecraft.server.BlockFenceGateHandle]

com.bergerkiller.mountiplex.conversion.builtin.MapConversion$MapConverter$ElementConverter[cost=1, (Map<MobEffectListHandle, MobEffectHandle>) Map<MobEffectList, MobEffect> -> Map<MobEffectListHandle, MobEffectHandle>]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.BiomeBase -> com.bergerkiller.generated.net.minecraft.server.BiomeBaseHandle]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, net.minecraft.server.DataWatcherObject<?> -> DataWatcher.Key<Integer>]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.EnumMoveTypeHandle -> net.minecraft.server.v1_12_R1.EnumMoveType]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.BlockCobbleWallHandle -> net.minecraft.server.v1_12_R1.BlockCobbleWall]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.EntityItemFrame -> com.bergerkiller.generated.net.minecraft.server.EntityItemFrameHandle]

com.bergerkiller.mountiplex.conversion.builtin.CollectionConversion$CollectionConverter$ElementConverter[cost=1, (List<com.bergerkiller.bukkit.common.wrappers.DataWatcher.Item<?>>) List<DataWatcher.Item<?>> -> List<com.bergerkiller.bukkit.common.wrappers.DataWatcher.Item<?>>]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.PacketPlayOutCollectHandle -> net.minecraft.server.v1_12_R1.PacketPlayOutCollect]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.com.mojang.authlib.GameProfileHandle -> com.mojang.authlib.GameProfile]

com.bergerkiller.mountiplex.conversion.type.NullConverter[cost=0, (Object) PacketPlayOutCombatEvent.EnumCombatEventType -> Object]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, com.bergerkiller.bukkit.common.protocol.CommonPacket -> (CommonPacket) Packet<?>]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.AxisAlignedBB -> com.bergerkiller.generated.net.minecraft.server.AxisAlignedBBHandle]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.GenericAttributes -> com.bergerkiller.generated.net.minecraft.server.GenericAttributesHandle]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.GenericAttributesHandle -> net.minecraft.server.v1_12_R1.GenericAttributes]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.PacketPlayInSetCreativeSlot -> com.bergerkiller.generated.net.minecraft.server.PacketPlayInSetCreativeSlotHandle]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.EntityItemFrameHandle -> net.minecraft.server.v1_12_R1.EntityItemFrame]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.RegistryMaterialsHandle -> net.minecraft.server.v1_12_R1.RegistryMaterials]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.EntityMinecartFurnace -> com.bergerkiller.generated.net.minecraft.server.EntityMinecartFurnaceHandle]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.IntHashMapHandle -> net.minecraft.server.v1_12_R1.IntHashMap]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.EnumSkyBlockHandle -> net.minecraft.server.v1_12_R1.EnumSkyBlock]

com.bergerkiller.mountiplex.conversion.builtin.ArrayConversion$1$5$1[cost=1, ChatText[] -> (ChatText[]) String[]]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.PacketPlayInWindowClick -> com.bergerkiller.generated.net.minecraft.server.PacketPlayInWindowClickHandle]

com.bergerkiller.mountiplex.conversion.Conversion$OutputConverterTree$1[cost=1, Object -> Comparable<?>]

com.bergerkiller.mountiplex.conversion.builtin.CollectionConversion$CollectionConverter$ElementConverter[cost=1, (List<EntityHumanHandle>) List<EntityHuman> -> List<EntityHumanHandle>]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.WorldData -> com.bergerkiller.generated.net.minecraft.server.WorldDataHandle]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, net.minecraft.server.DataWatcherObject<?> -> DataWatcher.Key<Object>]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.PacketPlayInVehicleMove -> com.bergerkiller.generated.net.minecraft.server.PacketPlayInVehicleMoveHandle]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.PlayerChunkMapHandle -> net.minecraft.server.v1_12_R1.PlayerChunkMap]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.PacketPlayOutUnloadChunkHandle -> net.minecraft.server.v1_12_R1.PacketPlayOutUnloadChunk]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.org.bukkit.craftbukkit.inventory.CraftItemStackHandle -> org.bukkit.craftbukkit.v1_12_R1.inventory.CraftItemStack]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.MovingObjectPositionHandle -> net.minecraft.server.v1_12_R1.MovingObjectPosition]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, org.bukkit.craftbukkit.v1_12_R1.util.CraftMagicNumbers -> com.bergerkiller.generated.org.bukkit.craftbukkit.util.CraftMagicNumbersHandle]

com.bergerkiller.mountiplex.conversion.type.NullConverter[cost=0, (Object) BossBattle.BarStyle -> Object]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, List<org.bukkit.entity.Player> -> List<net.minecraft.server.v1_12_R1.EntityPlayer>]

com.bergerkiller.mountiplex.conversion.builtin.CollectionConversion$CollectionConverter$ElementConverter[cost=1, List<net.minecraft.server.v1_12_R1.EntityPlayer> -> List<org.bukkit.entity.Player>]

com.bergerkiller.mountiplex.conversion.Conversion$OutputConverterTree$1[cost=1, Object -> net.minecraft.server.v1_12_R1.ItemStack]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, org.bukkit.craftbukkit.v1_12_R1.CraftServer -> com.bergerkiller.generated.org.bukkit.craftbukkit.CraftServerHandle]

com.bergerkiller.mountiplex.conversion.type.NullConverter[cost=0, BiMap<Integer, Class<? extends Packet<?>>> -> BiMap]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, net.minecraft.server.TileEntity -> org.bukkit.block.BlockState]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.MobEffectListHandle -> net.minecraft.server.v1_12_R1.MobEffectList]

com.bergerkiller.mountiplex.conversion.type.CastingConverter[cost=1, BiMap -> BiMap<Integer, Class<? extends Packet<?>>>]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, com.bergerkiller.bukkit.common.wrappers.ChatText -> String]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, Set<EntityTrackerEntryHandle> -> (Set<EntityTrackerEntryHandle>) Set<EntityTrackerEntry>]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, net.minecraft.server.NBTTagCompound -> com.bergerkiller.bukkit.common.nbt.CommonTagCompound]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.org.bukkit.craftbukkit.util.CraftChatMessageHandle -> org.bukkit.craftbukkit.v1_12_R1.util.CraftChatMessage]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.AttributeMapServer -> com.bergerkiller.generated.net.minecraft.server.AttributeMapServerHandle]

com.bergerkiller.mountiplex.conversion.type.NullConverter[cost=0, IBlockState<?> -> Object]

com.bergerkiller.mountiplex.conversion.builtin.MapConversion$MapConverter$ElementConverter[cost=1, (Map<Object, Object>) ImmutableMap<IBlockState<?>, Comparable<?>> -> Map<Object, Object>]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.org.bukkit.craftbukkit.inventory.CraftInventoryBrewerHandle -> org.bukkit.craftbukkit.v1_12_R1.inventory.CraftInventoryBrewer]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.BlockPosition -> com.bergerkiller.generated.net.minecraft.server.BlockPositionHandle]

com.bergerkiller.mountiplex.conversion.Conversion$OutputConverterTree$1[cost=1, Object -> (Object) BossBattle.BarStyle]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.PacketPlayInBoatMove -> com.bergerkiller.generated.net.minecraft.server.PacketPlayInBoatMoveHandle]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.MinecraftKey -> com.bergerkiller.generated.net.minecraft.server.MinecraftKeyHandle]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.IRecipe -> com.bergerkiller.generated.net.minecraft.server.IRecipeHandle]

com.bergerkiller.mountiplex.conversion.builtin.MapConversion$MapConverter$ElementConverter[cost=1, (Map<org.bukkit.inventory.ItemStack, org.bukkit.inventory.ItemStack>) Map<ItemStack, ItemStack> -> Map<org.bukkit.inventory.ItemStack, org.bukkit.inventory.ItemStack>]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.CrashReportHandle -> net.minecraft.server.v1_12_R1.CrashReport]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, Collection<org.bukkit.Chunk> -> Collection<net.minecraft.server.v1_12_R1.Chunk>]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.NetworkManagerHandle -> net.minecraft.server.v1_12_R1.NetworkManager]

com.bergerkiller.mountiplex.conversion.type.NullConverter[cost=0, String -> String]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, org.bukkit.craftbukkit.v1_12_R1.inventory.CraftInventoryMerchant -> com.bergerkiller.generated.org.bukkit.craftbukkit.inventory.CraftInventoryMerchantHandle]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.PacketPlayOutEntityEquipment -> com.bergerkiller.generated.net.minecraft.server.PacketPlayOutEntityEquipmentHandle]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.IBlockState -> com.bergerkiller.generated.net.minecraft.server.IBlockStateHandle]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.PacketPlayOutEntityMetadata -> com.bergerkiller.generated.net.minecraft.server.PacketPlayOutEntityMetadataHandle]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.DataPaletteBlock -> com.bergerkiller.generated.net.minecraft.server.DataPaletteBlockHandle]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.NBTTagList -> com.bergerkiller.generated.net.minecraft.server.NBTTagListHandle]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.EntityHuman -> com.bergerkiller.generated.net.minecraft.server.EntityHumanHandle]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.org.bukkit.craftbukkit.util.LongObjectHashMapHandle -> org.bukkit.craftbukkit.v1_12_R1.util.LongObjectHashMap]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.CrashReportSystemDetailsHandle -> net.minecraft.server.v1_12_R1.CrashReportSystemDetails]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.WeightedRandomHandle.WeightedRandomChoiceHandle -> net.minecraft.server.v1_12_R1.WeightedRandom.WeightedRandomChoice]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.PacketPlayInUseEntityHandle.EnumEntityUseActionHandle -> net.minecraft.server.v1_12_R1.PacketPlayInUseEntity.EnumEntityUseAction]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.MapIconHandle -> net.minecraft.server.v1_12_R1.MapIcon]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, com.bergerkiller.bukkit.common.nbt.CommonTagList -> net.minecraft.server.NBTTagList]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.EnumProtocolHandle -> net.minecraft.server.v1_12_R1.EnumProtocol]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.PacketPlayOutRemoveEntityEffect -> com.bergerkiller.generated.net.minecraft.server.PacketPlayOutRemoveEntityEffectHandle]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.PacketPlayInResourcePackStatusHandle -> net.minecraft.server.v1_12_R1.PacketPlayInResourcePackStatus]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.DataWatcher -> com.bergerkiller.generated.net.minecraft.server.DataWatcherHandle]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.PacketPlayOutEntity.PacketPlayOutRelEntityMoveLook -> com.bergerkiller.generated.net.minecraft.server.PacketPlayOutEntityHandle.PacketPlayOutRelEntityMoveLookHandle]

com.bergerkiller.mountiplex.conversion.Conversion$OutputConverterTree$1[cost=1, Object -> net.minecraft.server.v1_12_R1.Entity]

com.bergerkiller.mountiplex.conversion.type.NullConverter[cost=0, (Iterable) RegistryBlockID<IBlockData> -> Iterable]

com.bergerkiller.mountiplex.conversion.type.NullConverter[cost=0, (List<?>) NonNullList<E> -> List<?>]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.PacketPlayOutSpawnEntityExperienceOrbHandle -> net.minecraft.server.v1_12_R1.PacketPlayOutSpawnEntityExperienceOrb]

com.bergerkiller.mountiplex.conversion.Conversion$OutputConverterTree$1[cost=1, Object -> PacketPlayOutPosition.EnumPlayerTeleportFlags]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.PacketPlayOutEntityMetadataHandle -> net.minecraft.server.v1_12_R1.PacketPlayOutEntityMetadata]

com.bergerkiller.mountiplex.conversion.type.NullConverter[cost=0, (Object) PacketPlayInResourcePackStatus.EnumResourcePackStatus -> Object]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.PacketPlayOutVehicleMoveHandle -> net.minecraft.server.v1_12_R1.PacketPlayOutVehicleMove]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.PacketPlayOutBossHandle -> net.minecraft.server.v1_12_R1.PacketPlayOutBoss]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.AxisAlignedBBHandle -> net.minecraft.server.v1_12_R1.AxisAlignedBB]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.PlayerChunkHandle -> net.minecraft.server.v1_12_R1.PlayerChunk]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.EntityInsentientHandle -> net.minecraft.server.v1_12_R1.EntityInsentient]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, org.bukkit.World -> net.minecraft.server.WorldServer]

com.bergerkiller.mountiplex.conversion.type.NullConverter[cost=0, (org.bukkit.block.Block) CraftBlock -> org.bukkit.block.Block]

com.bergerkiller.mountiplex.conversion.builtin.CollectionConversion$CollectionConverter$ElementConverter[cost=1, (List<CraftInputSlot>) NonNullList<RecipeItemStack> -> List<CraftInputSlot>]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.PacketPlayOutTitle.EnumTitleAction -> com.bergerkiller.generated.net.minecraft.server.PacketPlayOutTitleHandle.EnumTitleActionHandle]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.PacketHandle -> net.minecraft.server.v1_12_R1.Packet]

com.bergerkiller.mountiplex.conversion.Conversion$OutputConverterTree$1[cost=1, Object -> (Object) NetworkManager]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.org.bukkit.plugin.PluginDescriptionFileHandle -> org.bukkit.plugin.PluginDescriptionFile]

com.bergerkiller.mountiplex.conversion.builtin.ArrayConversion$1$5$1[cost=1, (ChatText[]) String[] -> com.bergerkiller.bukkit.common.wrappers.ChatText[]]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.PacketPlayInTeleportAccept -> com.bergerkiller.generated.net.minecraft.server.PacketPlayInTeleportAcceptHandle]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.org.bukkit.craftbukkit.entity.CraftEntityHandle -> org.bukkit.craftbukkit.v1_12_R1.entity.CraftEntity]

com.bergerkiller.mountiplex.conversion.builtin.ArrayConversion$1$5$1[cost=1, (IChatBaseComponentHandle[]) net.minecraft.server.IChatBaseComponent[] -> IChatBaseComponentHandle[]]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, net.minecraft.server.DataWatcher.Item -> com.bergerkiller.bukkit.common.wrappers.DataWatcher.Item]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.PacketPlayOutTitleHandle -> net.minecraft.server.v1_12_R1.PacketPlayOutTitle]

com.bergerkiller.mountiplex.conversion.type.NullConverter[cost=0, Comparable<?> -> Object]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.EntityMinecartRideable -> com.bergerkiller.generated.net.minecraft.server.EntityMinecartRideableHandle]

com.bergerkiller.mountiplex.conversion.Conversion$OutputConverterTree$1[cost=1, Object -> (Object) EnumCreatureType]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.IChatBaseComponent -> com.bergerkiller.generated.net.minecraft.server.IChatBaseComponentHandle]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.PacketPlayInUseEntityHandle -> net.minecraft.server.v1_12_R1.PacketPlayInUseEntity]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.PacketPlayOutSpawnEntityHandle -> net.minecraft.server.v1_12_R1.PacketPlayOutSpawnEntity]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, com.bergerkiller.bukkit.common.wrappers.DataWatcher.Item<?> -> net.minecraft.server.DataWatcher.Item<?>]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.PacketPlayInUseEntity -> com.bergerkiller.generated.net.minecraft.server.PacketPlayInUseEntityHandle]

com.bergerkiller.mountiplex.conversion.builtin.ArrayConversion$1$5$1[cost=1, net.minecraft.server.v1_12_R1.MapIcon[] -> org.bukkit.map.MapCursor[]]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, com.bergerkiller.bukkit.common.wrappers.ChunkSection -> net.minecraft.server.ChunkSection]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.WorldNBTStorageHandle -> net.minecraft.server.v1_12_R1.WorldNBTStorage]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, net.minecraft.server.EnumGamemode -> org.bukkit.GameMode]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, com.bergerkiller.bukkit.common.wrappers.DataWatcher.Key<?> -> (DataWatcher.Key<Byte>) DataWatcherObject<Byte>]

com.bergerkiller.mountiplex.conversion.type.NullConverter[cost=0, Boolean -> Boolean]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, List<com.bergerkiller.bukkit.common.wrappers.DataWatcher.Item> -> List<net.minecraft.server.v1_12_R1.DataWatcher.Item>]

com.bergerkiller.mountiplex.conversion.Conversion$OutputConverterTree$1[cost=1, Object -> AttributeInstance]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.PacketPlayOutMapChunk -> com.bergerkiller.generated.net.minecraft.server.PacketPlayOutMapChunkHandle]

com.bergerkiller.mountiplex.reflection.declarations.Template$Class$1[cost=1, net.minecraft.server.v1_12_R1.ChunkSection -> com.bergerkiller.generated.net.minecraft.server.ChunkSectionHandle]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, List<com.bergerkiller.bukkit.common.wrappers.DataWatcher> -> List<net.minecraft.server.v1_12_R1.DataWatcher>]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, net.minecraft.server.ItemStack -> org.bukkit.inventory.ItemStack]

com.bergerkiller.mountiplex.conversion.Conversion$OutputConverterTree$1[cost=1, Object -> (Object) PlayerInventory]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, (List<org.bukkit.entity.Player>) List<EntityHuman> -> List<org.bukkit.entity.Player>]

com.bergerkiller.mountiplex.conversion.type.DuplexConverter$ReverseDuplexConverter[cost=1, com.bergerkiller.generated.net.minecraft.server.EnumHandHandle -> net.minecraft.server.v1_12_R1.EnumHand]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, net.minecraft.server.PlayerAbilities -> com.bergerkiller.bukkit.common.wrappers.PlayerAbilities]

com.bergerkiller.mountiplex.conversion.type.AnnotatedConverter[cost=1, org.bukkit.entity.Entity -> net.minecraft.server.v1_12_R1.EntityLiving]

