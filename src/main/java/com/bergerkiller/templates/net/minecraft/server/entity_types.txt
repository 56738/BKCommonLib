package net.minecraft.server;

import com.bergerkiller.generated.net.minecraft.server.RegistryMaterialsHandle;

class EntityTypes {
    // 1.10.2 and before used a Map<String, Class> and Map<Class, String> to store name to entity class information
#if version >= 1.11
    private static optional final (Map<String, Class<?>>) Map<String, Class<? extends Entity>> opt_nameTypeMap_1_10_2:###;
    private static optional final (Map<Class<?>, String>) Map<Class<? extends Entity>, String> opt_typeNameMap_1_10_2:###;
#else
    private static optional final (Map<String, Class<?>>) Map<String, Class<? extends Entity>> opt_nameTypeMap_1_10_2:c;
    private static optional final (Map<Class<?>, String>) Map<Class<? extends Entity>, String> opt_typeNameMap_1_10_2:d;
#endif

#if version >= 1.13
    public static final (RegistryMaterialsHandle) RegistryMaterials<MinecraftKey, EntityTypes<?>> opt_registry:REGISTRY;
#elseif version >= 1.11
    public static final (RegistryMaterialsHandle) RegistryMaterials<MinecraftKey, Class<? extends Entity>> opt_registry:b;
#else
    public static final (RegistryMaterialsHandle) RegistryMaterials<MinecraftKey, Class<? extends Entity>> opt_registry:###;
#endif

#if version >= 1.13
    public static Class<?> getEntityClass(String internalEntityName) {
        EntityTypes type = EntityTypes.a(internalEntityName);
        if (type == null) {
            return null;
        } else {
            return type.c();
        }
    }

    public static String getEntityInternalName(Class<?> entityType) {
        java.util.Iterator iter = EntityTypes.REGISTRY.iterator();
        while (iter.hasNext()) {
            EntityTypes type = iter.next();
            if (type.c() == entityType) {
                MinecraftKey key = EntityTypes.getName(type);
                if (key != null) {
                    return key.getKey();
                }
            }
        }
        return null;
    }
#elseif version >= 1.11
    public static Class<?> getEntityClass(String internalEntityName) {
        return EntityTypes.b.get(name);
    }

    public static String getEntityInternalName(Class<?> entityType) {
        MinecraftKey key = EntityTypes.getName(entityType);
        if (key == null) {
            return null;
        } else {
            return EntityTypes.a(key);
        }
    }
#elseif version >= 1.9
    public static Class<?> getEntityClass(String internalEntityName) {
        return com.bergerkiller.generated.net.minecraft.server.EntityTypesHandle.T.opt_nameTypeMap.get().get(name);
    }

    public static String getEntityInternalName(Class<?> entityType) {
        return EntityTypes.getName(entityType);
    }
#else
    public static Class<?> getEntityClass(String internalEntityName) {
        return com.bergerkiller.generated.net.minecraft.server.EntityTypesHandle.T.opt_nameTypeMap.get().get(name);
    }

    public static String getEntityInternalName(Class<?> entityType) {
        return com.bergerkiller.generated.net.minecraft.server.EntityTypesHandle.T.opt_typeNameMap.get().get(entityType);
    }
#endif

}
