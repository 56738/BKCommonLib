package net.minecraft.server;

import net.minecraft.server.MinecraftKey;
import net.minecraft.server.ResourceKey;

import com.bergerkiller.generated.net.minecraft.server.ResourceKeyHandle;
import com.bergerkiller.generated.net.minecraft.server.MinecraftKeyHandle;

// Only available >= MC 1.9
optional class RegistryBlockID {
    public int getId(T value);
}

class RegistryID {
#if version >= 1.9
    public int getId(K value);
#else
    public int getId:b(T value);
#endif
}

class RegistryMaterials {
#if version >= 1.13
    protected optional final Map<V, K> opt_inverseLookupField:###;
#else
    protected optional final Map<V, K> opt_inverseLookupField:b;
#endif

#if version >= 1.13.1
    public V get((Object) MinecraftKey key);
    public (Object) MinecraftKey getKey:getKey(V value);
#elseif version >= 1.9
    public V get((Object) K key);
    public (Object) K getKey:b(V value);
#else
    public V get((Object) K key);
    public (Object) K getKey:c(V value);
#endif
}

// Since MC 1.14 has static fields
optional class IRegistry {

#if version >= 1.14
    public static int getWindowIdFromName(String name) {
        if (name == null) return -1;
        Object item = IRegistry.MENU.get(new MinecraftKey(name));
        return (item == null) ? -1 : IRegistry.MENU.a(item);
    }
#else
    public static int getWindowIdFromName(String name) {
        return -1;
    }
#endif

}

class ResourceKey {
#if version >= 1.16
    public (MinecraftKeyHandle) MinecraftKey getCategory() {
        #require net.minecraft.server.ResourceKey private final MinecraftKey category:b;
        return instance#category;
    }

    public (MinecraftKeyHandle) MinecraftKey getName:a();

    public static (ResourceKeyHandle) ResourceKey create:a((ResourceKeyHandle) ResourceKey category, (MinecraftKeyHandle) MinecraftKey name);
    public static (ResourceKeyHandle) ResourceKey createCategory:a((MinecraftKeyHandle) MinecraftKey categoryName);
#else
    public (MinecraftKeyHandle) MinecraftKey getCategory() {
        return (net.minecraft.server.MinecraftKey) instance.category;
    }

    public (MinecraftKeyHandle) MinecraftKey getName() {
        return (net.minecraft.server.MinecraftKey) instance.name;
    }

    public static (ResourceKeyHandle) ResourceKey create((ResourceKeyHandle) ResourceKey category, (MinecraftKeyHandle) MinecraftKey name) {
        return net.minecraft.server.ResourceKey.create(category, (Object) name);
    }

    public static (ResourceKeyHandle) ResourceKey createCategory((MinecraftKeyHandle) MinecraftKey categoryName) {
        return net.minecraft.server.ResourceKey.createCategory((Object) categoryName);
    }
#endif
}