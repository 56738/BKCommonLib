package net.minecraft.server;

import com.bergerkiller.generated.net.minecraft.server.DimensionManagerHandle;

class DimensionManager {
#if version >= 1.14
    public boolean hasSkyLight();
#else
    // Fallback for versions before DimensionManager had this property
    // On these versions it is inside WorldProvider, but that one is annoying to use
    public boolean hasSkyLight() {
        return instance.getDimensionID() == 0;
    }
#endif

#if version >= 1.16
  #if version >= 1.16.3
    #require net.minecraft.server.MinecraftServer public final IRegistryCustom.Dimension customRegistry;
  #else
    #require net.minecraft.server.MinecraftServer public final IRegistryCustom.Dimension customRegistry:f;
  #endif

    public (com.bergerkiller.bukkit.common.resources.ResourceKey<com.bergerkiller.bukkit.common.resources.DimensionType>) ResourceKey getKey() {
        MinecraftServer server = MinecraftServer.getServer();
        IRegistryCustom$Dimension registry = server#customRegistry;
        java.util.Optional key_opt = registry.a().c(instance);
        if (key_opt.isPresent()) {
            return (ResourceKey) key_opt.get();
        } else {
            throw new IllegalArgumentException("This dimension is not registered");
        }
    }

    public static (DimensionManagerHandle) DimensionManager fromKey((com.bergerkiller.bukkit.common.resources.ResourceKey<com.bergerkiller.bukkit.common.resources.DimensionType>) ResourceKey key) {
        MinecraftServer server = MinecraftServer.getServer();
        IRegistryCustom$Dimension registry = server#customRegistry;
        return (DimensionManager) registry.a().a(key);
    }

    // deprecated fallback
    public int getId() {
        MinecraftServer server = MinecraftServer.getServer();
        IRegistryCustom$Dimension registry = server#customRegistry;
        java.util.Optional key_opt = registry.a().c(instance);
        if (key_opt.isPresent()) {
            ResourceKey res_key = (ResourceKey) key_opt.get();
            if (res_key == DimensionManager.OVERWORLD) {
                return 0;
            } else if (res_key == DimensionManager.THE_NETHER) {
                return -1;
            } else if (res_key == DimensionManager.THE_END) {
                return 1;
            }
        }
        return 0;
    }

    public static (DimensionManagerHandle) DimensionManager fromId(int id) {
        ResourceKey res_key;
        if (id == 0) {
            res_key = DimensionManager.OVERWORLD;
        } else if (id == -1) {
            res_key = DimensionManager.THE_NETHER;
        } else if (id == 1) {
            res_key = DimensionManager.THE_END;
        } else {
            throw new IllegalArgumentException("Invalid dimension id " + id);
        }
        MinecraftServer server = MinecraftServer.getServer();
        IRegistryCustom$Dimension registry = server#customRegistry;
        return (DimensionManager) registry.a().a(res_key);
    }
#else
    public (com.bergerkiller.bukkit.common.resources.ResourceKey<com.bergerkiller.bukkit.common.resources.DimensionType>) ResourceKey getKey() {
        net.minecraft.server.ResourceKey category = (net.minecraft.server.ResourceKey) com.bergerkiller.bukkit.common.resources.ResourceCategory.dimension_type.getCategoryKey().getRaw();
        net.minecraft.server.MinecraftKey name;

  #if version >= 1.13.1
        name = IRegistry.DIMENSION_TYPE.getKey((Object) instance);
        if (name == null) {
            throw new IllegalArgumentException("This dimension is not registered");
        }
  #else
        // Is an enum here, with always only 3 possible values anyway
        if (instance == DimensionManager.NETHER) {
            name = new net.minecraft.server.MinecraftKey("the_nether");
        } else if (instance == DimensionManager.THE_END) {
            name = new net.minecraft.server.MinecraftKey("the_end");
        } else {
            name = new net.minecraft.server.MinecraftKey("overworld");
        }
  #endif

        return net.minecraft.server.ResourceKey.create(category, name);
    }

    public static (DimensionManagerHandle) DimensionManager fromKey((com.bergerkiller.bukkit.common.resources.ResourceKey<com.bergerkiller.bukkit.common.resources.DimensionType>) ResourceKey key) {
        net.minecraft.server.MinecraftKey mc_key = (net.minecraft.server.MinecraftKey) key.name;

  #if version >= 1.13.1
        return (DimensionManager) IRegistry.DIMENSION_TYPE.get(mc_key);
  #else
        // Is an enum here, with always only 3 possible values anyway
        String name;
    #if version >= 1.12
        name = mc_key.getKey();
    #else
        name = mc_key.a();
    #endif
        if (name.equals("overworld")) {
            return DimensionManager.OVERWORLD;
        } else if (name.equals("the_nether")) {
            return DimensionManager.NETHER;
        } else if (name.equals("the_end")) {
            return DimensionManager.THE_END;
        } else {
            return null;
        }
  #endif
    }

    // mapped to id on 1.15.2 and before
    public int getId:getDimensionID();
    public static (DimensionManagerHandle) DimensionManager fromId:a(int id);
#endif
}
