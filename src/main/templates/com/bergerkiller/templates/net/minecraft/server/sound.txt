package net.minecraft.server;

import net.minecraft.core.RegistryMaterials;
import net.minecraft.resources.MinecraftKey;

import com.bergerkiller.bukkit.common.wrappers.ResourceKey;
import net.minecraft.server.SoundEffect;

import com.bergerkiller.generated.net.minecraft.server.SoundEffectHandle;
import com.bergerkiller.generated.net.minecraft.resources.MinecraftKeyHandle;
import com.bergerkiller.generated.net.minecraft.core.RegistryMaterialsHandle;
import com.bergerkiller.generated.net.minecraft.server.SoundCategoryHandle;

optional class SoundCategory {
    public String getName:a();

#if version >= 1.13
    public static (SoundCategoryHandle) SoundCategory byName(String name) {
        SoundCategory[] categories = SoundCategory.values();
        for (int i = 0; i < categories.length; i++) {
            SoundCategory cat = categories[i];
            if (cat.a().equals(name)) {
                return cat;
            }
        }
        return null;
    }
#else
    public static (SoundCategoryHandle) SoundCategory byName:a(String name);
#endif
}

class SoundEffectType {
#if version >= 1.16.5
    public (SoundEffectHandle) SoundEffect getStepSound();
    public (SoundEffectHandle) SoundEffect getPlaceSound();
    public (SoundEffectHandle) SoundEffect getBreakSound:getFallSound();
    public (SoundEffectHandle) SoundEffect getFallSound();
#elseif version >= 1.9
    public (SoundEffectHandle) SoundEffect getStepSound:d();
    public (SoundEffectHandle) SoundEffect getPlaceSound:e();
    public (SoundEffectHandle) SoundEffect getBreakSound:g();
    public (SoundEffectHandle) SoundEffect getFallSound:g();
#else
    public (SoundEffectHandle) String getStepSound();
    public (SoundEffectHandle) String getPlaceSound();
    public (SoundEffectHandle) String getBreakSound();
    public (SoundEffectHandle) String getFallSound:getBreakSound();
#endif
}

class SoundEffect {
#if version >= 1.13.1
    public static final optional (RegistryMaterialsHandle) RegistryMaterials<MinecraftKey, SoundEffect> opt_getRegistry() {
        return (RegistryMaterials) IRegistry.SOUND_EVENT;
    }

  #if version >= 1.16
    private final (MinecraftKeyHandle) MinecraftKey name:b;
  #else
    private final (MinecraftKeyHandle) MinecraftKey name:a;
  #endif

    public (SoundEffectHandle) SoundEffect((MinecraftKeyHandle) MinecraftKey minecraftkey);
#elseif version >= 1.9
    public static final optional (RegistryMaterialsHandle) RegistryMaterials<MinecraftKey, SoundEffect> opt_getRegistry() {
        return SoundEffect.a;
    }

    private final (MinecraftKeyHandle) MinecraftKey name:b;

    public (SoundEffectHandle) SoundEffect((MinecraftKeyHandle) MinecraftKey minecraftkey);
#else
    public static final optional (RegistryMaterialsHandle) RegistryMaterials<MinecraftKey, SoundEffect> opt_getRegistry:###();
    private final (MinecraftKeyHandle) MinecraftKeyHandle name;

    public (SoundEffectHandle) SoundEffect(MinecraftKeyHandle minecraftkey);
#endif

    <code>
    public static SoundEffectHandle byName(String name) {
        if (T.opt_getRegistry.isAvailable()) {
            Object mc_key_raw = MinecraftKeyHandle.T.createNew.raw.invoke(name);
            if (mc_key_raw != null) {
                return createHandle(T.opt_getRegistry.invoke().get(mc_key_raw));
            } else {
                return null;
            }
        } else {
            return createNew(MinecraftKeyHandle.createNew(name));
        }
    }
    </code>

}
