package org.bukkit.craftbukkit.util;

import com.bergerkiller.generated.net.minecraft.server.IChatBaseComponentHandle;
import com.bergerkiller.generated.org.bukkit.craftbukkit.util.LongObjectHashMapHandle;

class LongObjectHashMap {
#if version >= 1.14
    public static (LongObjectHashMapHandle) org.bukkit.craftbukkit.util.LongObjectHashMap createNew() {
        return new it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap();
    }
#else
    public static (LongObjectHashMapHandle) org.bukkit.craftbukkit.util.LongObjectHashMap createNew() {
        return new LongObjectHashMap();
    }
#endif

    public void clear();

    public int size();

    public boolean containsKey(long key);

    public V get(long key);

    public V remove(long key);

    public V put(long key, V value);

#if version >= 1.14
    public volatile Collection<V> values();
    public volatile Set<Long> keySet();
#else
    public Collection<V> values();
    public Set<Long> keySet();
#endif
}

class CraftMagicNumbers {
    public static org.bukkit.Material getMaterialFromBlock:getMaterial((Object) net.minecraft.server.Block nmsBlock);

    public static org.bukkit.Material getMaterialFromItem:getMaterial((Object) net.minecraft.server.Item nmsItem);

#if version >= 1.15.2
    // Workaround for bug since 1.15.2 with legacy materials
    public static (Object) net.minecraft.server.Item getItemFromMaterial(org.bukkit.Material material) {
        return CraftMagicNumbers.getItem(org.bukkit.craftbukkit.legacy.CraftLegacy.fromLegacy(material));
    }
    public static (Object) net.minecraft.server.Block getBlockFromMaterial(org.bukkit.Material material) {
        return CraftMagicNumbers.getBlock(org.bukkit.craftbukkit.legacy.CraftLegacy.fromLegacy(material));
    }
#else
    public static (Object) net.minecraft.server.Item getItemFromMaterial:getItem(org.bukkit.Material material);
    public static (Object) net.minecraft.server.Block getBlockFromMaterial:getBlock(org.bukkit.Material material);
#endif

    public static int getDataVersion() {
#if version >= 1.13
        return CraftMagicNumbers.INSTANCE.getDataVersion();
#else
        return 0;
#endif
    }

    <code>
    public static com.bergerkiller.generated.net.minecraft.server.IBlockDataHandle getBlockDataFromMaterial(org.bukkit.Material material) {
        return com.bergerkiller.generated.net.minecraft.server.BlockHandle.T.getBlockData.invoke(getBlockFromMaterial(material));
    }
    </code>
}

class CraftChatMessage {

    // Original was modified so it does not erase a chat color style prefix character
    public static String fromComponent((IChatBaseComponentHandle) net.minecraft.server.IChatBaseComponent component) {
        if (component == null) {
            return "";
        }

        StringBuilder out = new StringBuilder();
        java.util.Iterator iter = ((Iterable) component).iterator();
        while (iter.hasNext()) {
            net.minecraft.server.IChatBaseComponent c = (net.minecraft.server.IChatBaseComponent) iter.next();
            net.minecraft.server.ChatModifier modi = c.getChatModifier();
            if (modi.getColor() != null) {
                out.append(modi.getColor());
            }
            if (modi.isBold()) {
                out.append(net.minecraft.server.EnumChatFormat.BOLD);
            }
            if (modi.isItalic()) {
                out.append(net.minecraft.server.EnumChatFormat.ITALIC);
            }
            if (modi.isUnderlined()) {
                out.append(net.minecraft.server.EnumChatFormat.UNDERLINE);
            }
            if (modi.isStrikethrough()) {
                out.append(net.minecraft.server.EnumChatFormat.STRIKETHROUGH);
            }
            if (modi.isRandom()) {
                out.append(net.minecraft.server.EnumChatFormat.OBFUSCATED);
            }
            out.append(c.getText());
        }
        return out.toString();
    }

    public static (IChatBaseComponentHandle[]) net.minecraft.server.IChatBaseComponent[] fromString(String message);
}