package org.bukkit.craftbukkit.util;

import com.bergerkiller.generated.net.minecraft.server.IChatBaseComponentHandle;
import com.bergerkiller.generated.org.bukkit.craftbukkit.util.LongHashSetHandle;
import com.bergerkiller.generated.org.bukkit.craftbukkit.util.LongObjectHashMapHandle;

class LongObjectHashMap {
#if version >= 1.14
    public static (LongObjectHashMapHandle) org.bukkit.craftbukkit.util.LongObjectHashMap createNew() {
        return new it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap();
    }
#else
    public static (LongObjectHashMapHandle) org.bukkit.craftbukkit.util.LongObjectHashMap createNew() {
        return new LongObjectHashMap();
    }
#endif

    public void clear();

    public int size();

    public boolean containsKey(long key);

    public V get(long key);

    public V remove(long key);

    public V put(long key, V value);

#if version >= 1.14
    public volatile Collection<V> values();
    public volatile Set<Long> keySet();
#else
    public Collection<V> values();
    public Set<Long> keySet();
#endif
}

class LongHashSet {
#if version >= 1.14
    public static (LongHashSetHandle) org.bukkit.craftbukkit.util.LongHashSet createNew(int size) {
        return new it.unimi.dsi.fastutil.longs.LongOpenHashSet(size);
    }
#else
    public static (LongHashSetHandle) org.bukkit.craftbukkit.util.LongHashSet createNew(int size) {
        return new LongHashSet(size);
    }
#endif

    <code>
    public static LongHashSetHandle createNew() {
        return createNew(16);
    }
    </code>

#if version >= 1.14
    public volatile (java.util.Iterator<Long>) java.util.Iterator iterator();
#else
    public (java.util.Iterator<Long>) java.util.Iterator iterator();
#endif

    public int size();
    public boolean isEmpty();
    public void clear();
    public boolean add(long value);
    public boolean remove(long value);
    public boolean contains(long value);

#if version >= 1.14
    public long popFirstElement() {
        it.unimi.dsi.fastutil.longs.LongIterator iter;
        iter = instance.iterator();
        long result = iter.nextLong();
        iter.remove();
        return result;
    }

    public long[] toArray() {
        long[] result = new long[instance.size()];
        it.unimi.dsi.fastutil.longs.LongIterator iter;
        iter = instance.iterator();
        for (int i = 0; i < result.length && iter.hasNext(); i++) {
            result[i] = iter.nextLong();
        }
        return result;
    }

    public long[] popAll() {
        long[] result = new long[instance.size()];
        it.unimi.dsi.fastutil.longs.LongIterator iter;
        iter = instance.iterator();
        for (int i = 0; i < result.length && iter.hasNext(); i++) {
            result[i] = iter.nextLong();
        }
        instance.clear();
        return result;
    }

    public void trim() {
        if (instance_raw instanceof it.unimi.dsi.fastutil.longs.LongLinkedOpenHashSet) {
            ((it.unimi.dsi.fastutil.longs.LongLinkedOpenHashSet) instance_raw).trim();
        } else if (instance_raw instanceof it.unimi.dsi.fastutil.longs.LongOpenHashSet) {
            ((it.unimi.dsi.fastutil.longs.LongOpenHashSet) instance_raw).trim();
        }
    }
#else
    public long popFirstElement() {
        if (instance.isEmpty()) {
            throw new java.util.NoSuchElementException();
        }
        return instance.popFirst();
    }

    public long[] toArray();
    public long[] popAll();
    private void trim:rehash();
#endif
}

class CraftMagicNumbers {
    public static org.bukkit.Material getMaterialFromBlock:getMaterial((Object) net.minecraft.server.Block nmsBlock);

    public static org.bukkit.Material getMaterialFromItem:getMaterial((Object) net.minecraft.server.Item nmsItem);

    public static (Object) net.minecraft.server.Item getItemFromMaterial:getItem(org.bukkit.Material material);

#if version >= 1.14
    // Bug on MC 1.14: WALL_SIGN does not work
    public static (Object) net.minecraft.server.Block getBlockFromMaterial(org.bukkit.Material material) {
        if (material == org.bukkit.Material.LEGACY_WALL_SIGN) {
            return net.minecraft.server.Blocks.OAK_WALL_SIGN;
        }
        return CraftMagicNumbers.getBlock(material);
    }
#else
    public static (Object) net.minecraft.server.Block getBlockFromMaterial:getBlock(org.bukkit.Material material);
#endif

#if version >= 1.13
    public static org.bukkit.Material toLegacy(org.bukkit.Material type) {
        if (type.isLegacy() && type.isBlock()) {
            return com.bergerkiller.bukkit.common.wrappers.BlockDataRegistry.fromMaterial(type).getLegacyType();
        }
        return CraftLegacy.toLegacy(type);
    }
#else
    public static org.bukkit.Material toLegacy(org.bukkit.Material type) {
        return type;
    }
#endif
}

class CraftChatMessage {
    public static String fromComponent((IChatBaseComponentHandle) net.minecraft.server.IChatBaseComponent component);

    public static (IChatBaseComponentHandle[]) net.minecraft.server.IChatBaseComponent[] fromString(String message);
}